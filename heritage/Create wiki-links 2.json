{
  "createdAt": "2025-05-13T12:33:48.179Z",
  "updatedAt": "2025-05-22T11:37:02.000Z",
  "id": "XlvRLQnOpVHFWWK2",
  "name": "Create wiki-links 2",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8afabc9a-474e-4d1d-89b7-78a065a7a705",
              "name": "site_id",
              "value": "={{ $json.site_id }}",
              "type": "string"
            },
            {
              "id": "d139d174-79d9-41c1-9af2-08f434564dd6",
              "name": "city_id",
              "value": "={{ $json.city_id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -60,
        -460
      ],
      "id": "6facc297-8c77-4e89-94ff-086cbcce5e84",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "select s.latitude, s.longitude, t.name\nfrom sites s join site_translations t on\ns.id = t.site_id\nwhere s.city_id = '{{ $json.city_id }}'\n--and si.primary_period is null\nand s.id = '{{ $json.site_id }}'\n  and t.language_code = 'en'\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        160,
        -460
      ],
      "id": "b9670599-810c-4ba9-82c0-62d655350e17",
      "name": "Postgres",
      "credentials": {
        "postgres": {
          "id": "EzZYFEVPXxVDpNLe",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -500,
        100
      ],
      "id": "4ffbcfdc-fa00-4ec4-9ca0-ad0c976160ff",
      "name": "OpenAI Chat Model"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "claude-3-7-sonnet-20250219",
          "cachedResultName": "Claude 3.7 Sonnet"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "typeVersion": 1.3,
      "position": [
        -500,
        340
      ],
      "id": "30ef1e43-7dc9-49e9-8a83-d7203c3f5bb2",
      "name": "Anthropic Chat Model"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "select language_code\nfrom city_translations\nwhere city_id = '{{ $('Edit Fields').first().json.city_id }}'",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        1856,
        -460
      ],
      "id": "31e74c0d-4505-4f95-af40-bc4bbdb53f44",
      "name": "Languages",
      "credentials": {
        "postgres": {
          "id": "EzZYFEVPXxVDpNLe",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "inputSource": "jsonExample",
        "jsonExample": "\n{\n\"site_id\": \n\"casa-do-cipreste\",\n\"city_id\": \n\"sintra\"\n}"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -500,
        -160
      ],
      "id": "c498bd93-2004-417a-99ff-a253adf7037f",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -280,
        -160
      ],
      "id": "cdc0d9a1-9b7d-4b96-8dbb-5940a6520b4c",
      "name": "Loop Over Items"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        2736,
        -410
      ],
      "id": "d5a13e74-fda3-420f-bba7-192ced725d03",
      "name": "Limit"
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "site_translations",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "site_id",
              "condition": "eq",
              "keyValue": "={{ $('Loop Over Items').first().json.site_id }}"
            },
            {
              "keyName": "city_id",
              "condition": "eq",
              "keyValue": "={{ $('Loop Over Items').first().json.city_id }}"
            },
            {
              "keyName": "language_code",
              "condition": "eq",
              "keyValue": "={{ $json.language_code }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "wiki_url",
              "fieldValue": "={{ $json.wikipedia_url }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        2516,
        -610
      ],
      "id": "230abc83-8b1b-42b9-b0d9-2e0765c17cfe",
      "name": "Supabase",
      "credentials": {
        "supabaseApi": {
          "id": "1Yc1VOr8K1yXCO1Q",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7ec818de-f0d3-4f3b-ac0a-2c8f45706969",
              "name": "wiki",
              "value": "={{ $json.results.bindings[0].item.value }}",
              "type": "string"
            },
            {
              "id": "ed87a3ee-f301-435c-b64f-507f1ceb89ef",
              "name": "wikidataId",
              "value": "={{ $json.results.bindings[0].item.value.split('/').pop() }}",
              "type": "string"
            },
            {
              "id": "3226380a-1ea5-4bd5-884d-08f21450decf",
              "name": "wiki_name",
              "value": "={{ $json.results.bindings[0].itemLabel.value }}",
              "type": "string"
            },
            {
              "id": "61e40ee7-201e-4bfe-a520-0d9e7f828d8a",
              "name": "hn_name",
              "value": "={{ $('Postgres').item.json.name }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        600,
        -460
      ],
      "id": "988d0e87-1657-45cb-a44b-e395275c3bf2",
      "name": "Wiki Url"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://query.wikidata.org/sparql",
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "query",
              "value": "=SELECT ?item ?itemLabel ?dist WHERE {\n  SERVICE wikibase:around {\n    ?item wdt:P625 ?loc .\n    bd:serviceParam wikibase:center \"Point({{ $('Postgres').item.json.longitude }} {{ $('Postgres').item.json.latitude }})\"^^geo:wktLiteral .\n    bd:serviceParam wikibase:radius \"0.1\" .          # lidt større radius\n    bd:serviceParam wikibase:distance ?dist .\n  }\n\n  # Henter labels (først dansk, ellers engelsk, derefter automatisk fallback)\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,it,pt,es,fr,de,da,[AUTO_LANGUAGE]\". }\n\n}\nORDER BY ?dist     # nærmeste først\nLIMIT 1"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        380,
        -460
      ],
      "id": "49e64fe0-2625-4db6-8a35-0d99664de770",
      "name": "Get Wikidata ID"
    },
    {
      "parameters": {
        "url": "https://www.wikidata.org/w/api.php",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "action",
              "value": "wbgetentities"
            },
            {
              "name": "ids",
              "value": "={{ $json.wikidataId }}"
            },
            {
              "name": "props",
              "value": "sitelinks/urls"
            },
            {
              "name": "format",
              "value": "json"
            },
            {
              "name": "sitefilter",
              "value": "dawiki|enwiki|ptwiki|eswiki|frwiki|dewiki|itwiki"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1196,
        -660
      ],
      "id": "a2b9ab7c-b27c-49be-8eb0-7c449580ad1c",
      "name": "Get Wiki Sites"
    },
    {
      "parameters": {
        "jsCode": "// –– 1. hent input ––\n// vi regner kun med det første item i batchen\nconst data      = $input.first().json;          // { siteLinks: …, id?: \"Q…\" }\nconst sitelinks = data.siteLinks ?? {};\nconst id        = data.id            // har du allerede gemt id’et, så brug det …\n              || data.wikidataId     // … eller måske hedder feltet sådan …\n              || null;               // ellers null  → fallback længere nede\n\n// –– 2. konverter til det ønskede format ––\nconst links  = {};   // { en: \"https://en.wikipedia.org/…\", … }\nlet commons  = null; // enkelt-streng eller udfyldes som fallback\n\nfor (const key in sitelinks) {\n  const { site, url } = sitelinks[key];\n\n  if (site === 'commonswiki') {\n    commons = url;                         // særbehandling af Wikimedia Commons\n  } else if (site.endsWith('wiki')) {\n    links[site.replace('wiki','')] = url;  // fx \"enwiki\" → \"en\"\n  }\n}\n\n// –– 3. fallback til Wikidata hvis intet Commons-link fandtes ––\nif (!commons && id) commons = `https://www.wikidata.org/wiki/${id}`;\n\n// –– 4. aflever resultatet til næste node ––\nitems[0].json = { links, commons, id };    // du har nu altid alle tre felter\nreturn items;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1636,
        -660
      ],
      "id": "5ec0dd91-565b-443d-8ed5-2a9c6359abca",
      "name": "BuildLinkMap"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "2382d99d-9609-458d-8ebf-12f39d93bfc0",
              "name": "links",
              "value": "={{ $json.links }}",
              "type": "object"
            },
            {
              "id": "4641756d-ed54-4441-a286-b0fb05a68564",
              "name": "commons",
              "value": "={{ $json.commons }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1856,
        -660
      ],
      "id": "0896ea13-ac4f-4603-a4bb-2a8a1cd0b7fa",
      "name": "GetWikiLinks"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        2076,
        -610
      ],
      "id": "dc1b45fc-5a4f-47bb-9086-a253b321d822",
      "name": "Merge"
    },
    {
      "parameters": {
        "jsCode": "/**\n * Inputs:\n *   • items fra \"Languages\": 7 items med { language_code }\n *   • ét item fra \"GetWikiLinks\":\n *       { links: {...}, commons: \"...\", id: \"Q…\" }\n *\n * Output:\n *   7 items, ét pr. sprog, med det bedste tilgæng- URL (eller null)\n */\n\nconst langItems = $items(\"Languages\");              // 7 stk.\nconst linkData  = $items(\"GetWikiLinks\")[0].json;\n\nconst links   = linkData.links   ?? {};             // { da: \"...\", en: \"...\", … }\nconst commons = linkData.commons ?? null;           // evt. null\nconst qid     = linkData.id      ?? null;           // fx \"Q16490856\"\n\nreturn langItems.map(li => {\n  const lang = li.json.language_code;\n\n  const url =\n        links[lang]                                          // 1) artikel på det ønskede sprog\n     || links[\"en\"]                                          // 2) engelsk artikel (hvis den findes)\n     || commons                                              // 3) Commons-kategori\n     || (qid ? `https://www.wikidata.org/wiki/Special:EntityPage/${qid}?uselang=${lang}` : null); // 4) Wikidata-side på brugerens sprog\n\n  return {\n    json: {\n      language_code: lang,\n      wikipedia_url: url\n    }\n  };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2296,
        -610
      ],
      "id": "88dcfc23-719c-4442-9641-82cfa054171f",
      "name": "Get Wiki Link pr language"
    },
    {
      "parameters": {
        "inputText": "=Decide if these two historic-site names refer to the SAME place. \nRespond ONLY with “Equal” or leave blank.\n\nSite-A: {{ $json.wiki_name }}\nSite-B: {{ $json.hn_name }}\n",
        "categories": {
          "categories": [
            {
              "category": "Equal",
              "description": "Names refer to the same historic site."
            }
          ]
        },
        "options": {
          "fallback": "other"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.textClassifier",
      "typeVersion": 1,
      "position": [
        820,
        -460
      ],
      "id": "c3612af8-f964-4a79-a45e-cfdbcac0d6f0",
      "name": "Text Classifier"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        908,
        -240
      ],
      "id": "1b72c945-9520-4d17-9241-8a7efd37a1df",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "7oESUrXOypaiYfq2",
          "name": "openrouter"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "select language_code\nfrom city_translations\nwhere city_id = '{{ $('Edit Fields').first().json.city_id }}'",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        1196,
        -310
      ],
      "id": "ea5a8eaa-8efd-4522-bb47-e91fb1578634",
      "name": "Languages1",
      "credentials": {
        "postgres": {
          "id": "EzZYFEVPXxVDpNLe",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        1636,
        -310
      ],
      "id": "3b768a77-5805-4792-8ae7-b234ea50a7d1",
      "name": "Limit1"
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "site_translations",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "site_id",
              "condition": "eq",
              "keyValue": "={{ $('Loop Over Items').first().json.site_id }}"
            },
            {
              "keyName": "city_id",
              "condition": "eq",
              "keyValue": "={{ $('Loop Over Items').first().json.city_id }}"
            },
            {
              "keyName": "language_code",
              "condition": "eq",
              "keyValue": "={{ $json.language_code }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "wiki_url",
              "fieldValue": "=NA"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        1416,
        -310
      ],
      "id": "1766a645-2acd-4636-9f9b-34ffcd165318",
      "name": "Supabase1",
      "credentials": {
        "supabaseApi": {
          "id": "1Yc1VOr8K1yXCO1Q",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "70be3e7d-3dbf-48f6-9309-8bb99d5d3ec4",
              "name": "siteLinks",
              "value": "={{ Object.values($json.entities)[0].sitelinks }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1416,
        -660
      ],
      "id": "0c5ac91f-b263-4dd7-8ee7-bb4cc250d0f8",
      "name": "SiteLinks"
    }
  ],
  "connections": {
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        []
      ]
    },
    "Postgres": {
      "main": [
        [
          {
            "node": "Get Wikidata ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Anthropic Chat Model": {
      "ai_languageModel": [
        []
      ]
    },
    "Languages": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wiki Url": {
      "main": [
        [
          {
            "node": "Text Classifier",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Wikidata ID": {
      "main": [
        [
          {
            "node": "Wiki Url",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Wiki Sites": {
      "main": [
        [
          {
            "node": "SiteLinks",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "BuildLinkMap": {
      "main": [
        [
          {
            "node": "GetWikiLinks",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GetWikiLinks": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Get Wiki Link pr language",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Wiki Link pr language": {
      "main": [
        [
          {
            "node": "Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Text Classifier",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Text Classifier": {
      "main": [
        [
          {
            "node": "Languages",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get Wiki Sites",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Languages1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase1": {
      "main": [
        [
          {
            "node": "Limit1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Languages1": {
      "main": [
        [
          {
            "node": "Supabase1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit1": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SiteLinks": {
      "main": [
        [
          {
            "node": "BuildLinkMap",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {
    "When Executed by Another Workflow": [
      {
        "json": {
          "site_id": "monte-pio-artistico-tavirense",
          "city_id": "tavira"
        }
      }
    ]
  },
  "versionId": "2893d724-c945-447f-9d7c-2f6c19dabd47",
  "triggerCount": 0,
  "shared": [
    {
      "createdAt": "2025-05-13T12:33:48.182Z",
      "updatedAt": "2025-05-13T12:33:48.182Z",
      "role": "workflow:owner",
      "workflowId": "XlvRLQnOpVHFWWK2",
      "projectId": "rkqKISKa14HwF9Xd"
    }
  ],
  "tags": []
}