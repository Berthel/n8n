{
  "createdAt": "2025-02-09T05:35:22.522Z",
  "updatedAt": "2025-06-23T11:58:16.000Z",
  "id": "FD4y527EKSFnaQMk",
  "name": "Register paid invoices",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-3.5-turbo-1106",
          "cachedResultName": "gpt-3.5-turbo-1106"
        },
        "options": {
          "temperature": 0
        }
      },
      "id": "7076854e-c7e8-45b5-9e5e-16678bffa254",
      "name": "OpenAI Model",
      "type": "@n8n/n8n-nodes-langchain.lmOpenAi",
      "position": [
        2545.9740588781942,
        580.0279776308931
      ],
      "typeVersion": 1,
      "credentials": {
        "openAiApi": {
          "id": "ZjiR1Y4tdzymEK1L",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsonSchema": "{\n  \"Document type\": { \"type\": \"string\" },\n  \"Invoice date\": { \"type\": \"date\" },\n  \"invoice number\": { \"type\": \"string\" },\n  \"Purchase order number\": { \"type\": \"string\" },\n  \"Supplier name\": { \"type\": \"string\" },\n  \"Supplier address\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"address 1\": { \"type\": \"string\" },\n      \"address 2\": { \"type\": \"string\" },\n      \"city\": { \"type\": \"string\" },\n      \"postcode\": { \"type\": \"string\" }\n    }\n  },\n  \"Supplier VAT identification number\": { \"type\": \"string\" },\n  \"Customer name\": { \"type\": \"string\" },\n  \"Customer address\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"address 1\": { \"type\": \"string\" },\n      \"address 2\": { \"type\": \"string\" },\n      \"city\": { \"type\": \"string\" },\n      \"postcode\": { \"type\": \"string\" }\n    }\n  },\n  \"Customer VAT identification number\": { \"type\": \"string\" }, \n  \"Shipping addresses\": {\n    \"type\": \"array\",\n    \"items\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"address 1\": { \"type\": \"string\" },\n        \"address 2\": { \"type\": \"string\" },\n        \"city\": { \"type\": \"string\" },\n        \"postcode\": { \"type\": \"string\" }\n      }\n    }\n  },\n  \"Line items\": {\n    \"type\": \"array\",\n    \"items\": {\n      \"name\": \"string\",\n      \"description\": \"string\",\n      \"price\": \"number\",\n      \"discount\": \"number\"\n    }\n  },\n  \"Subtotal without VAT\": { \"type\": \"number\" },\n  \"Subtotal with VAT\": { \"type\": \"number\" },\n  \"Total price\": { \"type\": \"number\" },\n  \"Currency\": { \"type\": \"string\" }\n}"
      },
      "id": "00819f1c-2c60-4b7c-b395-445ec05fd898",
      "name": "Structured Output Parser",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "position": [
        2780,
        840
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.cloud.llamaindex.ai/api/parsing/upload",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "parameterType": "formBinaryData",
              "name": "file",
              "inputDataFieldName": "=data"
            }
          ]
        },
        "options": {}
      },
      "id": "3b40d506-aabc-4105-853a-a318375cea73",
      "name": "Upload to LlamaParse",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1745.9740588781945,
        520.0279776308931
      ],
      "typeVersion": 4.2,
      "credentials": {
        "httpHeaderAuth": {
          "id": "lj0WPv2fMRkJwQXc",
          "name": "Llamaparse"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://api.cloud.llamaindex.ai/api/parsing/job/{{ $json.id }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "id": "cdb0a7ee-068d-465a-b4ae-d5221d5e7400",
      "name": "Get Processing Status",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1925.9740588781945,
        520.0279776308931
      ],
      "typeVersion": 4.2,
      "credentials": {
        "httpHeaderAuth": {
          "id": "lj0WPv2fMRkJwQXc",
          "name": "Llamaparse"
        }
      }
    },
    {
      "parameters": {
        "amount": 1
      },
      "id": "b68a01ab-d8e6-42f4-ab1d-81e746695eef",
      "name": "Wait to stay within service limits",
      "type": "n8n-nodes-base.wait",
      "position": [
        2245.9740588781942,
        660.0279776308931
      ],
      "webhookId": "17a96ed6-b5ff-47bb-a8a2-39c1eb40185a",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "300fce8c-b19a-4d0c-86e8-f62853c70ce2",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "SUCCESS"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "SUCCESS"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "e6058aa0-a3e2-4ce3-9bed-6ff41a5be052",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "ERROR"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "ERROR"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "ceb6338f-4261-40ac-be11-91f61c7302ba",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "CANCELED"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CANCELED"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "0fa97d86-432a-409a-917e-5f1a002b1ab9",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "PENDING"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PENDING"
            }
          ]
        },
        "options": {
          "allMatchingOutputs": true
        }
      },
      "id": "41bd28d2-665a-4f71-a456-98eeb26b6655",
      "name": "Is Job Ready?",
      "type": "n8n-nodes-base.switch",
      "position": [
        2085.9740588781942,
        520.0279776308931
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "url": "=https://api.cloud.llamaindex.ai/api/parsing/job/{{ $json.id }}/result/markdown",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "ffabd8c5-c440-4473-8e44-b849426c70cf",
      "name": "Get Parsed Invoice Data",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        2285.9740588781942,
        380.02797763089313
      ],
      "typeVersion": 4.2,
      "credentials": {
        "httpHeaderAuth": {
          "id": "lj0WPv2fMRkJwQXc",
          "name": "Llamaparse"
        }
      }
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ $json.output }}",
        "options": {}
      },
      "id": "5f9b507f-4dc1-4853-bf71-a64f2f4b55c1",
      "name": "Map Output",
      "type": "n8n-nodes-base.set",
      "position": [
        2885.9740588781942,
        420.02797763089313
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Given the following invoice in the <invoice> xml tags, extract the following information as listed below.\nIf you cannot the information for a specific item, then leave blank and skip to the next. \n\n* Document type (Receipt or Invoice)\n* Invoice date\n* invoice number\n* Purchase order number\n* Supplier name\n* Supplier address\n* Supplier VAT identification number\n* Customer name\n* Customer address\n* Customer VAT identification number\n* Shipping addresses\n* Line items, including a description of the goods or services rendered\n* Price with and without VAT\n* Total price\n* Currency\n\n<invoice>{{ $json.markdown }}</invoice>",
        "hasOutputParser": true
      },
      "id": "d22744cd-151d-4b92-b4f2-4a5b9ceb4ee7",
      "name": "Apply Data Extraction Rules",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "position": [
        2545.9740588781942,
        420.02797763089313
      ],
      "typeVersion": 1.4
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $('Get paid invoices').item.json.id }}",
          "mode": "id"
        },
        "options": {}
      },
      "id": "d2a9410d-4808-423b-b9cb-cbe0fc974cd9",
      "name": "Download File",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        1420,
        520
      ],
      "executeOnce": false,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "PJ6id5UZ4SjuKSnf",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        2280,
        1580
      ],
      "id": "56e454ec-614b-4770-85e2-d135a7ba88ed",
      "name": "Loop Over Items"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        580,
        520
      ],
      "id": "17a57ca1-7a11-4a0f-aefd-1dae9156530b",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "resource": "fileFolder",
        "queryString": "=",
        "returnAll": true,
        "filter": {
          "folderId": {
            "__rl": true,
            "value": "1fy_p-ZMw9m03t76jba2IbTc_ywqn1iSS",
            "mode": "list",
            "cachedResultName": "paid invoices",
            "cachedResultUrl": "https://drive.google.com/drive/folders/1fy_p-ZMw9m03t76jba2IbTc_ywqn1iSS"
          }
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        820,
        520
      ],
      "id": "f29067e2-b974-4115-9e7b-10e3a4c0f8c7",
      "name": "Get paid invoices",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "PJ6id5UZ4SjuKSnf",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "operation": "move",
        "fileId": {
          "__rl": true,
          "value": "={{ $('Download File').item.json.id }}",
          "mode": "id"
        },
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "value": "1sU-v6ayflz7RofTxQLpy1NNCe5R1qEct",
          "mode": "list",
          "cachedResultName": "paid invoices registered",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1sU-v6ayflz7RofTxQLpy1NNCe5R1qEct"
        }
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        3280,
        420
      ],
      "id": "c05498d6-d262-45ca-90d7-5ef33748e246",
      "name": "Move invoice to registered",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "PJ6id5UZ4SjuKSnf",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1WR9VAmON3EJJm_I2WLu3vJei1BQwYkU8aaerKONcgEc",
          "mode": "list",
          "cachedResultName": "Paid invoices sheet",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WR9VAmON3EJJm_I2WLu3vJei1BQwYkU8aaerKONcgEc/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1319495533,
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WR9VAmON3EJJm_I2WLu3vJei1BQwYkU8aaerKONcgEc/edit#gid=1319495533"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Invoice date": "={{ $json['Invoice date'] }}",
            "Invoice number": "={{ $json['Invoice number'] }}",
            "Purchase order no": "={{ $json['Purchase order number'] }}",
            "Supplier name": "={{ $json['Supplier name'] }}",
            "Supplier address": "={{ $json['Supplier address'] }}",
            "Supplier VAT": "={{ $json['Supplier VAT identification number'] }}",
            "Customer name": "={{ $json['Customer name'] }}",
            "Customer address": "={{ $json['Customer address'] }}",
            "Customer VAT": "={{ $json['Customer VAT identification number'] }}",
            "Shipping address": "={{ $json['Shipping addresses'] }}",
            "Line items": "={{ $json['Line items'][0] }}",
            "Subtotal without VAT": "={{ $json['Price without VAT'] }}",
            "Subtotal with VAT": "={{ $json['Price with VAT'] }}",
            "Total price": "={{ $json['Total price'] }}",
            "Document type": "={{ $json['Document type'] }}",
            "File name": "={{ $('Get paid invoices').item.json.name }}",
            "Fileid": "={{ $('Get paid invoices').item.json.id }}",
            "Currency": "={{ $json.Currency }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Document type",
              "displayName": "Document type",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Invoice date",
              "displayName": "Invoice date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Invoice number",
              "displayName": "Invoice number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Purchase order no",
              "displayName": "Purchase order no",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Supplier name",
              "displayName": "Supplier name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Supplier address",
              "displayName": "Supplier address",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Supplier VAT",
              "displayName": "Supplier VAT",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Customer name",
              "displayName": "Customer name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Customer address",
              "displayName": "Customer address",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Customer VAT",
              "displayName": "Customer VAT",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Shipping address",
              "displayName": "Shipping address",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Line items",
              "displayName": "Line items",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Subtotal without VAT",
              "displayName": "Subtotal without VAT",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Subtotal with VAT",
              "displayName": "Subtotal with VAT",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Total price",
              "displayName": "Total price",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Currency",
              "displayName": "Currency",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "File name",
              "displayName": "File name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Fileid",
              "displayName": "Fileid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "8503817b-e6b5-4e56-856e-81de5b8058d8",
      "name": "Append to Reconciliation Sheet",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        3080,
        420
      ],
      "typeVersion": 4.3,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "bKaJRm6o8HLbNDIq",
          "name": "Google Sheets account 2"
        }
      }
    },
    {
      "parameters": {
        "maxItems": 5
      },
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        1040,
        520
      ],
      "id": "d526d5d8-c98a-48ea-8647-aedf8c016f4f",
      "name": "Limit"
    }
  ],
  "connections": {
    "Map Output": {
      "main": [
        [
          {
            "node": "Append to Reconciliation Sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Model": {
      "ai_languageModel": [
        [
          {
            "node": "Apply Data Extraction Rules",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Is Job Ready?": {
      "main": [
        [
          {
            "node": "Get Parsed Invoice Data",
            "type": "main",
            "index": 0
          }
        ],
        null,
        null,
        [
          {
            "node": "Wait to stay within service limits",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload to LlamaParse": {
      "main": [
        [
          {
            "node": "Get Processing Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Processing Status": {
      "main": [
        [
          {
            "node": "Is Job Ready?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Parsed Invoice Data": {
      "main": [
        [
          {
            "node": "Apply Data Extraction Rules",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Apply Data Extraction Rules",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Apply Data Extraction Rules": {
      "main": [
        [
          {
            "node": "Map Output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait to stay within service limits": {
      "main": [
        [
          {
            "node": "Get Processing Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download File": {
      "main": [
        [
          {
            "node": "Upload to LlamaParse",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        []
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Get paid invoices",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get paid invoices": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Move invoice to registered": {
      "main": [
        []
      ]
    },
    "Append to Reconciliation Sheet": {
      "main": [
        [
          {
            "node": "Move invoice to registered",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "Download File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {},
  "staticData": null,
  "meta": {
    "templateId": "2320",
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "730ee3b6-fb72-4af4-a0b2-eba85c50fd9a",
  "triggerCount": 0,
  "shared": [
    {
      "createdAt": "2025-02-09T05:53:25.300Z",
      "updatedAt": "2025-02-09T05:53:25.300Z",
      "role": "workflow:owner",
      "workflowId": "FD4y527EKSFnaQMk",
      "projectId": "rkqKISKa14HwF9Xd"
    }
  ],
  "tags": [
    {
      "createdAt": "2025-02-09T16:38:26.099Z",
      "updatedAt": "2025-02-09T16:38:26.099Z",
      "id": "YEStJInGeLpvHEQ8",
      "name": "tool"
    }
  ]
}