{
  "createdAt": "2025-08-27T04:20:38.898Z",
  "updatedAt": "2025-09-09T08:33:20.000Z",
  "id": "mlXlnlrQ4Tvp42XA",
  "name": "Course translation 2",
  "active": true,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "1e414dae-8b81-4e8a-ab30-2e4b95942127",
        "authentication": "headerAuth",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "f3a65850-b1d3-401e-8cce-dbb42492d677",
      "name": "Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -320,
        -16
      ],
      "webhookId": "1e414dae-8b81-4e8a-ab30-2e4b95942127",
      "credentials": {
        "httpHeaderAuth": {
          "id": "WwlGKLCrVwJHzSyW",
          "name": "Academy webhook"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": "public",
        "table": "courses",
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "id",
              "value": "={{ $('Webhook Trigger').item.json.body.course_id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "b55bcf00-ed2b-4bd8-9530-908bb9154ed1",
      "name": "Fetch Course Info",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        624,
        112
      ],
      "credentials": {
        "postgres": {
          "id": "RUVxlMmZvsZC2IGe",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={   \"success\": true,   \"message\": \"Kurset er nu oversat til {{ $('Webhook Trigger').first().json.body.target_language }}\",   \"title\": \"{{ $('Translate Course').first().json.output.title }}\",   \"course_id\": \"{{ $('Webhook Trigger').first().json.body.course_id }}\" }",
        "options": {}
      },
      "id": "c1b31e54-944a-4dea-8a24-306c6b6884e0",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.5,
      "position": [
        2144,
        1968
      ]
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"title\": \"Kursustitel\",\n\t\"description\": \"Kort beskrivelse af kurset\",\n\t\"content\": \"Hovedindholdet eller tekstligt indhold for kurset\",\n\t\"video_url\": \"URL til kursusvideo\",\n\t\"image_url\": \"URL til kursusbillede\",\n\t\"videoscript\": \"Transskription eller manuskript til videoen\",\n  \"learning_objectives\": \n[\n\"Forstå formålet med arbejdsmiljøledelse og ISO 45001's rolle i en moderne organisation\",\n\"Kunne redegøre for de grundlæggende krav og nøgleprincipper i ISO 45001 samt forskellene til tidligere standarder\",\n\"Identificere og vurdere branche-/sektorspecifikke risici og forstå tilpasningen af arbejdsmiljøindsatsen\",\n\"Kende best practices i implementering, herunder lederskab, medarbejderinvolvering og integration med forretningen\",\n\"Anvende modenhedsmodeller og forstå centrale drivere/barrierer for implementering og vedligeholdelse\",\n\"Forstå og kunne forklare opbygning af KPI’er, auditprocesser og løbende performance-evaluering\",\n\"Reflektere over egen organisations arbejdsmiljøindsats og planlægge konkrete forbedringstiltag\"\n],\n\t\"thumbnail_url\": \"URL til miniatyrbillede/thumbnail\",\n\t\"image_text\": \"Alternativ tekst (alt) for billedet\",\n\t\"image_prompt\": \"Prompt brugt til at generere billedet (hvis relevant)\",\n  \"translated_module_titles\":\n  [\n  {\n    \"position\": \"1\",\n    \"title\": \"Introduction to occupational health and safety management and ISO 45001\"\n  },\n  {\n    \"position\": \"2\",\n    \"title\": \"ISO 45001 structure and key requirements\"\n  },\n  {\n    \"position\": \"3\",\n    \"title\": \"Industry risks and adapting the occupational health and safety management system\"\n  },\n  {\n    \"position\": \"4\",\n    \"title\": \"Best practices, maturity and organizational embedding\"\n  }\n]\n\n}\n",
        "autoFix": true
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        3344,
        320
      ],
      "id": "f9140f71-a691-4645-a521-3330aa538293",
      "name": "Structured Output Parser1"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        2704,
        96
      ],
      "id": "8465bc5f-39fe-4804-97b8-b0a5ba10b7c8",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c20d4fbd-d108-4182-a8f5-01160aceb6de",
              "name": "data",
              "value": "={{ $json.data[0] }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2928,
        96
      ],
      "id": "8617bfd2-98d5-4bf2-9a8e-0a7a231c8350",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": "public",
        "table": "course_translations",
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "course_id",
              "value": "={{ $('Webhook Trigger').item.json.body.course_id }}"
            },
            {
              "column": "language_code",
              "value": "={{ $('Webhook Trigger').item.json.body.source_language }}"
            }
          ]
        },
        "options": {}
      },
      "id": "dc90a386-76d8-43ca-94d5-97127b5fa484",
      "name": "Fetch Course Translation",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        2416,
        96
      ],
      "credentials": {
        "postgres": {
          "id": "RUVxlMmZvsZC2IGe",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "upsert",
        "schema": "public",
        "table": "course_translations",
        "columns": {
          "0": "c",
          "1": "o",
          "2": "u",
          "3": "r",
          "4": "s",
          "5": "e",
          "6": "_",
          "7": "i",
          "8": "d",
          "9": ",",
          "10": "l",
          "11": "a",
          "12": "n",
          "13": "g",
          "14": "u",
          "15": "a",
          "16": "g",
          "17": "e",
          "18": "_",
          "19": "c",
          "20": "o",
          "21": "d",
          "22": "e",
          "23": ",",
          "24": "t",
          "25": "i",
          "26": "t",
          "27": "l",
          "28": "e",
          "29": ",",
          "30": "d",
          "31": "e",
          "32": "s",
          "33": "c",
          "34": "r",
          "35": "i",
          "36": "p",
          "37": "t",
          "38": "i",
          "39": "o",
          "40": "n",
          "41": ",",
          "42": "c",
          "43": "o",
          "44": "n",
          "45": "t",
          "46": "e",
          "47": "n",
          "48": "t",
          "49": ",",
          "50": "v",
          "51": "i",
          "52": "d",
          "53": "e",
          "54": "o",
          "55": "s",
          "56": "c",
          "57": "r",
          "58": "i",
          "59": "p",
          "60": "t",
          "61": ",",
          "62": "l",
          "63": "e",
          "64": "a",
          "65": "r",
          "66": "n",
          "67": "i",
          "68": "n",
          "69": "g",
          "70": "_",
          "71": "o",
          "72": "b",
          "73": "j",
          "74": "e",
          "75": "c",
          "76": "t",
          "77": "i",
          "78": "v",
          "79": "e",
          "80": "s",
          "81": ",",
          "82": "i",
          "83": "m",
          "84": "a",
          "85": "g",
          "86": "e",
          "87": "_",
          "88": "t",
          "89": "e",
          "90": "x",
          "91": "t",
          "92": ",",
          "93": "v",
          "94": "i",
          "95": "d",
          "96": "e",
          "97": "o",
          "98": "_",
          "99": "u",
          "100": "r",
          "101": "l",
          "102": ",",
          "103": "i",
          "104": "m",
          "105": "a",
          "106": "g",
          "107": "e",
          "108": "_",
          "109": "u",
          "110": "r",
          "111": "l",
          "112": ",",
          "113": "t",
          "114": "h",
          "115": "u",
          "116": "m",
          "117": "b",
          "118": "n",
          "119": "a",
          "120": "i",
          "121": "l",
          "122": "_",
          "123": "u",
          "124": "r",
          "125": "l",
          "126": ",",
          "127": "i",
          "128": "m",
          "129": "a",
          "130": "g",
          "131": "e",
          "132": "_",
          "133": "p",
          "134": "r",
          "135": "o",
          "136": "m",
          "137": "p",
          "138": "t",
          "139": ",",
          "140": "s",
          "141": "t",
          "142": "a",
          "143": "t",
          "144": "u",
          "145": "s",
          "mappingMode": "defineBelow",
          "value": {
            "course_id": "={{ $('Webhook Trigger').first().json.body.course_id }}",
            "language_code": "={{ $('Webhook Trigger').first().json.body.target_language }}",
            "title": "={{ $json.output.title }}",
            "description": "={{ $json.output.description }}",
            "content": "={{ $json.output.content }}",
            "image_url": "={{ $json.output.image_url }}",
            "videoscript": "={{ $json.output.videoscript }}",
            "learning_objectives": "={{ $json.output.learning_objectives }}",
            "thumbnail_url": "={{ $json.output.thumbnail_url }}",
            "image_text": "={{ $json.output.image_text }}",
            "image_prompt": "={{ $json.output.image_prompt }}",
            "status": "draft"
          },
          "matchingColumns": [
            "course_id",
            "language_code"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "course_id",
              "displayName": "course_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "language_code",
              "displayName": "language_code",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "title",
              "displayName": "title",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": false
            },
            {
              "id": "description",
              "displayName": "description",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": false
            },
            {
              "id": "content",
              "displayName": "content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": false
            },
            {
              "id": "video_url",
              "displayName": "video_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "image_url",
              "displayName": "image_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": false
            },
            {
              "id": "videoscript",
              "displayName": "videoscript",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": false
            },
            {
              "id": "learning_objectives",
              "displayName": "learning_objectives",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "array",
              "canBeUsedToMatch": false,
              "removed": false
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": false
            },
            {
              "id": "thumbnail_url",
              "displayName": "thumbnail_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": false
            },
            {
              "id": "image_text",
              "displayName": "image_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": false
            },
            {
              "id": "image_prompt",
              "displayName": "image_prompt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "023d6352-5965-4b1d-88e7-ba7bd7d8610e",
      "name": "Upsert Course Translation",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        3600,
        96
      ],
      "credentials": {
        "postgres": {
          "id": "RUVxlMmZvsZC2IGe",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "select t.module_id, t.title, m.position\nfrom module_translations t join modules m\non t.module_id = m.id\nwhere m.course_id = '{{ $('Webhook Trigger').item.json.body.course_id }}'\nand t.language_code = '{{ $('Webhook Trigger').item.json.body.source_language }}'",
        "options": {}
      },
      "id": "acdf2348-db4f-469b-8a37-82058f9d7205",
      "name": "Fetch Module Names",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        848,
        112
      ],
      "credentials": {
        "postgres": {
          "id": "RUVxlMmZvsZC2IGe",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "module_id, title",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        4384,
        80
      ],
      "id": "fe338889-0abd-403a-bb83-c07e4a313fab",
      "name": "Split Out"
    },
    {
      "parameters": {
        "content": "## Course",
        "height": 80
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -128,
        0
      ],
      "id": "3151fe31-1ad4-4ae8-a948-e7e74820b736",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## Module",
        "height": 80
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        800,
        992
      ],
      "id": "424d2f5b-7b97-4ac2-96d8-2390822cf66d",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "select t.lesson_id, t.title, l.position\nfrom lesson_translations t join lessons l\non t.lesson_id = l.id\nwhere l.module_id =  '{{ $json.module_id }}'\nand t.language_code = '{{ $('Webhook Trigger').first().json.body.source_language }}'\norder by l.position",
        "options": {}
      },
      "id": "f7f5effb-8af9-4e1c-b1c3-ed1ee08c35ae",
      "name": "Fetch Lesson Names",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        912,
        752
      ],
      "credentials": {
        "postgres": {
          "id": "RUVxlMmZvsZC2IGe",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": "public",
        "table": {
          "__rl": true,
          "value": "module_translations",
          "mode": "list",
          "cachedResultName": "module_translations"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "module_id",
              "value": "={{ $('Edit Fields2').first().json.module_id }}"
            },
            {
              "column": "language_code",
              "value": "={{ $('Webhook Trigger').first().json.body.source_language }}"
            }
          ]
        },
        "options": {}
      },
      "id": "27643fd0-1735-4f2c-8a2c-0bffbf3f1615",
      "name": "Fetch Module Translation",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1808,
        1136
      ],
      "credentials": {
        "postgres": {
          "id": "RUVxlMmZvsZC2IGe",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        416,
        656
      ],
      "id": "38f321e2-c9e8-48ee-b3e7-3050da8c9887",
      "name": "Loop Over Items",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "cf6c5a77-2163-4ab8-9f48-0445c5828509",
              "name": "module_id",
              "value": "={{ $json.module_id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        656,
        752
      ],
      "id": "cf3c75e0-310f-4e1d-b603-5b6cb6b47c62",
      "name": "Edit Fields2"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        2032,
        1136
      ],
      "id": "e8c8d661-c11b-4805-9749-5820a1e2e1fe",
      "name": "Aggregate1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c20d4fbd-d108-4182-a8f5-01160aceb6de",
              "name": "data",
              "value": "={{ $json.data[0] }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2512,
        1136
      ],
      "id": "97a465fc-0585-4937-8990-4f683c8a1c1a",
      "name": "Edit Fields3"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are a professional course translator. Translate the provided course content from (ISO 639) language **{{ $('Webhook Trigger').item.json.body.source_language }}** to **{{ $('Webhook Trigger').item.json.body.target_language }}** following the guidelines below.\n\n# Course Context\n- **Course Structure:** **Course** -> Modules -> Lessons. We are now working in the top Course level.\n- **Course Title:** {{ $json.data.title }}\n- **Source Language (ISO 639) code:** {{ $('Webhook Trigger').item.json.body.source_language }}\n- **Target Language (ISO 639) code::** {{ $('Webhook Trigger').item.json.body.target_language }}\n\n# Instructions\n1. Ensure a professional and educational tone throughout.\n2. Keep technical terms in English when appropriate.\n3. Preserve the markdown formatting and structure, especially for arrays, such as 'learning_objectives'.\n4. Translate all module titles using the provided mappings. Apply these exact translations uniformly wherever the module title appears (e.g., content, videoscripts, descriptions).\n\n\n\n\n\n",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "type": "HumanMessagePromptTemplate",
              "message": "=# Tasks\n**Task 1:**\nTranslate the following module titles and then use these module title translations everywhere throughout the course content. Preserve the positions unchanged:\n{{ JSON.stringify($('AggModulePositions').item.json.data, null, 2) }}\n\n**Task 2:**\nTranslate the course content provided below:\n{{ JSON.stringify($json.data, null, 2) }}"
            }
          ]
        },
        "batching": {}
      },
      "id": "6af410ca-cbcc-4b9f-b5c1-a4a2d7fd4a1c",
      "name": "Translate Course",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        3152,
        96
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are a professional course translator. Translate the provided course module content from (ISO 639) language **{{ $('Webhook Trigger').first().json.body.source_language }}** to **{{ $('Webhook Trigger').first().json.body.target_language }}** following the guidelines below.\n\n# Course Context\n- **Course Structure:** Course -> **Modules** -> Lessons. We are now working in one module and the lesson titles \n- **Course Title:** {{ $json.data.title }}\n- **Source Language (ISO 639) code:** {{ $('Webhook Trigger').first().json.body.source_language }}\n- **Target Language (ISO 639) code:** {{ $('Webhook Trigger').first().json.body.target_language }}\n\n- **Course Description:**\n{{ $('Fetch Course Translation').first().json.description }}\n\n- **Modules in this course:**\n{{ JSON.stringify($('AggModulePositions').first().json.data, null, 2) }}\n\n- **This Module title:** {{ $json.data.title }}\n\n# Instructions\n1. Translate all lesson titles using the provided mappings. Apply these exact translations uniformly wherever the lesson title appears (e.g., content, videoscripts, descriptions).\n2. Translate this module: {{ $json.data.title }}\n3. Ensure a professional and educational tone throughout.\n4. Keep technical terms in English when appropriate.\n5. Preserve the formatting and structure.\n\n\n\n\n",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "type": "HumanMessagePromptTemplate",
              "message": "=# Tasks\n**Task 1:**\nTranslate the following lesson **titles** belonging to this module. Don't change the position values:\n{{ JSON.stringify($('AggLessonPositions').first().json.data, null, 2) }}\n\nUse these translations of lesson titles whereever lesson titles are used in the module content to get at consistent translation of lesson titles throughout the module translation.\n\n**Task 2:**\nTranslate the module content provided below:\n{{ JSON.stringify($json.data, null, 2) }}\n\n**Task 3:**\nDouble check that all position values are unchanged. Notice that position can start with a higher number than 1 since lesson positions har countiously numbered across all modules."
            }
          ]
        },
        "batching": {}
      },
      "id": "d59ffeef-f390-4214-9424-3f735592e1a3",
      "name": "Translate Module",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        2816,
        1136
      ]
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"title\": \"Introduktion til Asset Management og jernbanekontekstenl\",\n\t\"content\": \"Som del af kurset Asset Management organisering, roller og ansvar...\",\n\t\"videoscript\": \"### Scene 1 – Velkommen til asset management i jernbanen\\n**Speak:**Velkommen til modul...\",\n\t\"description\": \"Kursets rammesætningsmodul, der introducerer, hvad asset management er...\",\n\t\"case_text\": \"# Case 1: Kyststrækningen – Mere end bare vedligehold\\n\\n### Baggrund\\nBanedanmark står over for en presserende udfordring...\",\n\t\"image_text\": \"Asset Management handler om værdiskabelse...\"\n,\n\"lessons\": \n[\n{\n\"position\": \n\"4\",\n\"title\": \n\"Arbejdsmiljøets betydning og statistik (globalt/Skandinavien)\"\n},\n{\n\"position\": \n\"5\",\n\"title\": \n\"Formål og fordele ved arbejdsmiljøledelsessystemer\"\n},\n{\n\"position\": \n\"6\",\n\"title\": \n\"ISO 45001 i oversigt: Historik, PDCA og HLS-struktur\"\n},\n{\n\"position\": \n\"7\",\n\"title\": \n\"Hovedforskelle til OHSAS 18001 og kobling til lovgivning\"\n}\n]\n}",
        "autoFix": true
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        3136,
        1424
      ],
      "id": "edcc672f-3a78-4515-8354-7b06d98cf067",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "2d31d867-b0c8-4f37-9618-c51643b21eb0",
              "name": "output.translated_module_titles",
              "value": "={{ $('Translate Course').item.json.output.translated_module_titles }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3824,
        96
      ],
      "id": "45bfcaf6-efac-40ba-893a-e9e775ceb707",
      "name": "Module Titles"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3a055f7d-94ec-4546-8dd2-6e33188fdeee",
              "name": "output.lessons",
              "value": "={{ $('Translate Module').item.json.output.lessons }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3472,
        1136
      ],
      "id": "7ab5fbac-943b-408e-8614-2f89c3662283",
      "name": "Lesson Titles"
    },
    {
      "parameters": {
        "operation": "upsert",
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list"
        },
        "table": {
          "__rl": true,
          "value": "lesson_translations",
          "mode": "list",
          "cachedResultName": "lesson_translations"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "lesson_id": "={{ $json.lesson_id }}",
            "language_code": "={{ $('Webhook Trigger').first().json.body.target_language }}",
            "title": "={{ $json.title }}"
          },
          "matchingColumns": [
            "lesson_id",
            "language_code"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "lesson_id",
              "displayName": "lesson_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "language_code",
              "displayName": "language_code",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "title",
              "displayName": "title",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "content",
              "displayName": "content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "video_url",
              "displayName": "video_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "image_url",
              "displayName": "image_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "videoscript",
              "displayName": "videoscript",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "gamma_url",
              "displayName": "gamma_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "exercises",
              "displayName": "exercises",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "reflection_questions",
              "displayName": "reflection_questions",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "resources",
              "displayName": "resources",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "image_text",
              "displayName": "image_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "image_prompt",
              "displayName": "image_prompt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "8de3a6a8-904e-4510-be4e-4b834acbf859",
      "name": "Upsert Lesson Titles",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        4128,
        1136
      ],
      "credentials": {
        "postgres": {
          "id": "RUVxlMmZvsZC2IGe",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "upsert",
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list"
        },
        "table": {
          "__rl": true,
          "value": "module_translations",
          "mode": "list",
          "cachedResultName": "module_translations"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "language_code": "={{ $('Webhook Trigger').first().json.body.target_language }}",
            "module_id": "={{ $json.module_id }}",
            "title": "={{ $json.title }}"
          },
          "matchingColumns": [
            "module_id",
            "language_code"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "module_id",
              "displayName": "module_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "language_code",
              "displayName": "language_code",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "title",
              "displayName": "title",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "content",
              "displayName": "content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "video_url",
              "displayName": "video_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "image_url",
              "displayName": "image_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "videoscript",
              "displayName": "videoscript",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "description",
              "displayName": "description",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "case_text",
              "displayName": "case_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "case_video_url",
              "displayName": "case_video_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "thumbnail_url",
              "displayName": "thumbnail_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "image_text",
              "displayName": "image_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "image_prompt",
              "displayName": "image_prompt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "7012d20f-feaf-44ab-b228-ef00c25077f7",
      "name": "Upsert Module Titles",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        4624,
        96
      ],
      "credentials": {
        "postgres": {
          "id": "RUVxlMmZvsZC2IGe",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": "public",
        "table": {
          "__rl": true,
          "value": "module_translations",
          "mode": "list",
          "cachedResultName": "module_translations"
        },
        "columns": {
          "0": "c",
          "1": "o",
          "2": "u",
          "3": "r",
          "4": "s",
          "5": "e",
          "6": "_",
          "7": "i",
          "8": "d",
          "9": ",",
          "10": "l",
          "11": "a",
          "12": "n",
          "13": "g",
          "14": "u",
          "15": "a",
          "16": "g",
          "17": "e",
          "18": "_",
          "19": "c",
          "20": "o",
          "21": "d",
          "22": "e",
          "23": ",",
          "24": "t",
          "25": "i",
          "26": "t",
          "27": "l",
          "28": "e",
          "29": ",",
          "30": "d",
          "31": "e",
          "32": "s",
          "33": "c",
          "34": "r",
          "35": "i",
          "36": "p",
          "37": "t",
          "38": "i",
          "39": "o",
          "40": "n",
          "41": ",",
          "42": "c",
          "43": "o",
          "44": "n",
          "45": "t",
          "46": "e",
          "47": "n",
          "48": "t",
          "49": ",",
          "50": "v",
          "51": "i",
          "52": "d",
          "53": "e",
          "54": "o",
          "55": "s",
          "56": "c",
          "57": "r",
          "58": "i",
          "59": "p",
          "60": "t",
          "61": ",",
          "62": "l",
          "63": "e",
          "64": "a",
          "65": "r",
          "66": "n",
          "67": "i",
          "68": "n",
          "69": "g",
          "70": "_",
          "71": "o",
          "72": "b",
          "73": "j",
          "74": "e",
          "75": "c",
          "76": "t",
          "77": "i",
          "78": "v",
          "79": "e",
          "80": "s",
          "81": ",",
          "82": "i",
          "83": "m",
          "84": "a",
          "85": "g",
          "86": "e",
          "87": "_",
          "88": "t",
          "89": "e",
          "90": "x",
          "91": "t",
          "92": ",",
          "93": "v",
          "94": "i",
          "95": "d",
          "96": "e",
          "97": "o",
          "98": "_",
          "99": "u",
          "100": "r",
          "101": "l",
          "102": ",",
          "103": "i",
          "104": "m",
          "105": "a",
          "106": "g",
          "107": "e",
          "108": "_",
          "109": "u",
          "110": "r",
          "111": "l",
          "112": ",",
          "113": "t",
          "114": "h",
          "115": "u",
          "116": "m",
          "117": "b",
          "118": "n",
          "119": "a",
          "120": "i",
          "121": "l",
          "122": "_",
          "123": "u",
          "124": "r",
          "125": "l",
          "126": ",",
          "127": "i",
          "128": "m",
          "129": "a",
          "130": "g",
          "131": "e",
          "132": "_",
          "133": "p",
          "134": "r",
          "135": "o",
          "136": "m",
          "137": "p",
          "138": "t",
          "139": ",",
          "140": "s",
          "141": "t",
          "142": "a",
          "143": "t",
          "144": "u",
          "145": "s",
          "mappingMode": "defineBelow",
          "value": {
            "module_id": "={{ $('Edit Fields3').item.json.data.module_id }}",
            "language_code": "={{ $('Webhook Trigger').first().json.body.target_language }}",
            "content": "={{ $json.output.content }}",
            "image_url": "={{ $('Edit Fields3').item.json.data.image_url }}",
            "videoscript": "={{ $json.output.videoscript }}",
            "description": "={{ $json.output.description }}",
            "case_text": "={{ $json.output.case_text }}",
            "status": "draft",
            "thumbnail_url": "={{ $('Edit Fields3').item.json.data.thumbnail_url }}",
            "image_text": "={{ $json.output.image_text }}",
            "image_prompt": "={{ $('Edit Fields3').item.json.data.image_prompt }}"
          },
          "matchingColumns": [
            "module_id",
            "language_code"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "module_id",
              "displayName": "module_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "language_code",
              "displayName": "language_code",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "title",
              "displayName": "title",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "content",
              "displayName": "content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "video_url",
              "displayName": "video_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image_url",
              "displayName": "image_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "videoscript",
              "displayName": "videoscript",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "description",
              "displayName": "description",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "case_text",
              "displayName": "case_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "case_video_url",
              "displayName": "case_video_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "thumbnail_url",
              "displayName": "thumbnail_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "image_text",
              "displayName": "image_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "image_prompt",
              "displayName": "image_prompt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "33e5fbd8-1264-4c2f-b6b6-b0558f5fc2c7",
      "name": "Update Module Translation",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        3248,
        1136
      ],
      "credentials": {
        "postgres": {
          "id": "RUVxlMmZvsZC2IGe",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Module Quiz",
        "height": 80
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        112,
        592
      ],
      "id": "fb8fc606-fdf9-4897-94b5-3448ed1c212f",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "fieldToSplitOut": "lesson_id, title",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        3904,
        1136
      ],
      "id": "ab406466-66ab-4f3f-9b9c-cbceb8771bf3",
      "name": "Split Lesson Titles"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT\n  q.module_id,\n  t.module_question_id,\n  o.id AS module_question_option_id,\n  (to_jsonb(q)  - 'id' - 'module_id')                          AS module_question,\n  (to_jsonb(t)  - 'id' - 'module_question_id')                 AS module_question_translation,\n  (to_jsonb(o)  - 'id' - 'module_question_id')                 AS module_question_option,\n  (to_jsonb(ot) - 'id' - 'module_question_option_id')          AS module_question_option_translation\nFROM module_questions q\nLEFT JOIN module_question_translations t\n  ON t.module_question_id = q.id AND t.language_code = '{{ $('Webhook Trigger').first().json.body.source_language }}'\nLEFT JOIN module_question_options o\n  ON o.module_question_id = q.id\nLEFT JOIN module_question_option_translations ot\n  ON ot.module_question_option_id = o.id AND ot.language_code = '{{ $('Webhook Trigger').first().json.body.source_language }}'\n  where q.module_id = '{{ $('Loop Over Items').first().json.module_id }}'\n",
        "options": {}
      },
      "id": "ddef39ec-e02b-4e04-8dd4-6e600ed12c74",
      "name": "Fetch Module Questions1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1744,
        752
      ],
      "credentials": {
        "postgres": {
          "id": "RUVxlMmZvsZC2IGe",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Input: items = array fra Postgres-noden\nconst byKey = new Map();\n\nfor (const item of items) {\n  const r = item.json;\n  const qid  = r.module_question_id;\n  const lang = r.module_question_translation?.language_code ?? 'unknown';\n  const key  = `${qid}::${lang}`;\n\n  if (!byKey.has(key)) {\n    byKey.set(key, {\n      module_id: r.module_id,\n      module_question_id: qid,\n      language_code: lang,\n      question_position: r.module_question?.position ?? null,\n      question_text: r.module_question_translation?.question_text ?? null,\n      options: [],\n    });\n  }\n\n  // Udelad options uden oversættelse, hvis du vil:\n  const option = {\n    module_question_option_id: r.module_question_option_id,\n    option_position: r.module_question_option?.position ?? null,\n    is_correct: r.module_question_option?.is_correct ?? null,\n    option_text: r.module_question_option_translation?.option_text ?? null,\n    option_language_code: r.module_question_option_translation?.language_code ?? lang,\n  };\n\n  // Tilføj kun hvis der faktisk er tekst (valgfrit filter)\n  if (option.option_text != null) {\n    byKey.get(key).options.push(option);\n  }\n}\n\n// Sortér options efter position (valgfrit)\nconst out = Array.from(byKey.values()).map(q => {\n  q.options.sort((a, b) => (a.option_position ?? 0) - (b.option_position ?? 0));\n  return { json: q };\n});\n\nreturn out;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1968,
        752
      ],
      "id": "280738af-9999-4f15-b457-0d2fc6057ff7",
      "name": "QuizOrg"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        2192,
        752
      ],
      "id": "121861f4-f38e-443a-8cfb-b7e91c469616",
      "name": "AggQuizOrg"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"module_questions\": [\n    {\n      \"question_position\": \"1\",\n      \"option_position\": \"1\",\n      \"question_text\": \"Hvilket af følgende udsagn beskriver bedst det primære formål med at implementere et arbejdsmiljøledelsessystem som ISO 45001?\",\n      \"options\": [\n        {\n          \"option_position\": \"1\",\n          \"option_text\": \"At forebygge arbejdsulykker og sygdomme gennem systematik og kontinuerlig forbedring.\"\n        },\n        {\n          \"option_position\": \"2\",\n          \"option_text\": \"At reducere virksomhedens energi- og ressourceforbrug.\"\n        },\n        {\n          \"option_position\": \"3\",\n          \"option_text\": \"At sikre, at alle medarbejdere er ansat på fuldtid.\"\n        },\n        {\n          \"option_position\": \"4\",\n          \"option_text\": \"At gøre virksomheden mindre afhængig af medarbejdernes input.\"\n        }\n      ]\n    },\n    {\n      \"question_position\": \"2\",\n      \"question_text\": \"Hvilket element er en NYT krav i ISO 45001 sammenlignet med OHSAS 18001 og har særlig betydning for ledere i den skandinaviske kontekst?\",\n      \"options\": [\n        {\n          \"option_position\": \"1\",\n          \"option_text\": \"Udarbejdelse af en arbejdsmiljøpolitik\"\n        },\n        {\n          \"option_position\": \"2\",\n          \"option_text\": \"Obligatorisk brug af eksterne auditører\"\n        },\n        {\n          \"option_position\": \"3\",\n          \"option_text\": \"Registrering af alle nærved-hændelser\"\n        },\n        {\n          \"option_position\": \"4\",\n          \"option_text\": \"Styrket medarbejderinddragelse og konsultationsprocesser på alle niveauer\"\n        }\n      ]\n    }\n  ]\n}",
        "autoFix": true
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        1904,
        1856
      ],
      "id": "808a8f88-c4fa-41ac-ae9c-ce2e4930b8fd",
      "name": "Structured Output Parser2"
    },
    {
      "parameters": {
        "operation": "upsert",
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list"
        },
        "table": {
          "__rl": true,
          "value": "module_question_translations",
          "mode": "list",
          "cachedResultName": "module_question_translations"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "module_question_id": "={{ $json.module_question_id }}",
            "language_code": "={{ $('Webhook Trigger').first().json.body.target_language }}",
            "question_text": "={{ $json.question_text }}"
          },
          "matchingColumns": [
            "module_question_id",
            "language_code"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "module_question_id",
              "displayName": "module_question_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "language_code",
              "displayName": "language_code",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "question_text",
              "displayName": "question_text",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "9884d71d-a439-4c89-812e-4c8514bf1462",
      "name": "Upsert quiz",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        3056,
        1632
      ],
      "credentials": {
        "postgres": {
          "id": "RUVxlMmZvsZC2IGe",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "upsert",
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list"
        },
        "table": {
          "__rl": true,
          "value": "module_question_option_translations",
          "mode": "list",
          "cachedResultName": "module_question_option_translations"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "module_question_option_id": "={{ $json.module_question_option_id }}",
            "option_text": "={{ $json.option_text }}",
            "language_code": "={{ $('Webhook Trigger').first().json.body.target_language }}"
          },
          "matchingColumns": [
            "module_question_option_id",
            "language_code"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "module_question_option_id",
              "displayName": "module_question_option_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "language_code",
              "displayName": "language_code",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "option_text",
              "displayName": "option_text",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "9c90fb7d-1236-4793-a467-16b650286276",
      "name": "Upsert quiz options",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        3776,
        1632
      ],
      "credentials": {
        "postgres": {
          "id": "RUVxlMmZvsZC2IGe",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        4064,
        1632
      ],
      "id": "ef400b1e-bb83-46c8-b69b-5d45eb372034",
      "name": "Limit"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are a professional course translator. Translate the provided course module **lesson content** from (ISO 639) language **{{ $('Webhook Trigger').first().json.body.source_language }}** to **{{ $('Webhook Trigger').first().json.body.target_language }}** following the guidelines below.\n\n# Course Context\n- **Course Structure: Course -> Modules -> **Lessons**. We are now working in one lesson in this course:\n- **Course Title:** {{ $('Translate Course').first().json.output.title }}\n- **Source Language (ISO 639) code:** {{ $('Webhook Trigger').first().json.body.source_language }}\n- **Target Language (ISO 639) code:** {{ $('Webhook Trigger').first().json.body.target_language }}\n- **Course Description:**\n{{ $('Fetch Course Translation').first().json.description }}\n\n- **Modules in this course:**\n{{ JSON.stringify($('AggModuleMapping').first().json.data, null, 2) }}\n\n- **This Module title:** {{ $('Fetch Module Translation').first().json.title }}\n- **This Module content:** {{ $('Loop').item.json.module_content_en }}\n\n\n- **The translated title of this lesson you are going to translate the content of:** {{ $('Loop').item.json.lesson_title_en }}\n\n# Instructions\n1. Translate this lesson content below.\n2. Don't change the name of the lesson, it is already translated\n3. Don't change id, code, url fields\n4. Ensure a professional and educational tone throughout.\n5. Keep technical terms in English when appropriate.\n6. Don't summarize content - translate it just as it is\n7. If there is no content to be translated then leave the section empty (\"\")\n8. Preserve the markdown formatting and the structure for at json output.\n\n\n\n\n",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "type": "HumanMessagePromptTemplate",
              "message": "=**Task:**\nTranslate the lesson content provided below:\n\n{{  JSON.stringify($json, null, 2) }}"
            }
          ]
        },
        "batching": {}
      },
      "id": "900ddb5b-686d-4e55-8962-4753b57d8206",
      "name": "Translate Lesson",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        2144,
        2192
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT\n  m.course_id,\n  m.id                       AS module_id,\n  m.position                 AS module_position,\n  l.id                       AS lesson_id,\n  l.position                 AS lesson_position,\n\n  -- Engelsk kontekst\n  mt_en.content              AS module_content_en,\n  lt_en.title                AS lesson_title_en,\n\n  -- Alle øvrige felter fra lesson_translations på dansk (ekskl. title)\n  lt_da.lesson_id,\n  lt_da.content,\n  lt_da.video_url,\n  lt_da.image_url,\n  lt_da.videoscript,\n  lt_da.exercises,\n  lt_da.reflection_questions,\n  lt_da.resources,\n  lt_da.image_text,\n  lt_da.image_prompt\nFROM modules m\nJOIN lessons l\n  ON l.module_id = m.id\nJOIN lesson_translations lt_da\n  ON lt_da.lesson_id = l.id\n AND lt_da.language_code = '{{ $('Webhook Trigger').first().json.body.source_language }}'\nLEFT JOIN lesson_translations lt_en\n  ON lt_en.lesson_id = l.id\n AND lt_en.language_code = '{{ $('Webhook Trigger').first().json.body.target_language }}'\nLEFT JOIN module_translations mt_en\n  ON mt_en.module_id = m.id\n AND mt_en.language_code = '{{ $('Webhook Trigger').first().json.body.target_language }}'\nWHERE m.course_id = '{{ $('Webhook Trigger').first().json.body.course_id }}'\nORDER BY m.position, l.position;",
        "options": {}
      },
      "id": "130d4f07-120f-4791-ac76-131834fd7a65",
      "name": "Fetch Lesson Org Content",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        560,
        2128
      ],
      "credentials": {
        "postgres": {
          "id": "RUVxlMmZvsZC2IGe",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"title\": \"The Significance and Statistics of Occupational Health and Safety\",\n\t\"content\": \"## Introduktion\\nVelkommen til denne første lektion, hvor vi sætter fokus på den helt grundlæggende årsag til, at vi beskæftiger os med arbejdsmiljøledelse\",\n\t\"exercises\": \"tatistik (globalt/Skandinavien)\\n\\n### Øvelse 1: Statistik-Spotting\\n\\n*Kort beskrivelse...\",\n\t\"reflection_questions\": \"## Reflektionsspørgsmål\\n\\n*   Lektionen præsenterer globale og skandinaviske statistikker om arbejdsmiljø. Hvilke af disse statistikker...\",\n\t\"resources\": \"### Yderligere ressourcer\\n- **ILO og WHO's fælles estimater...\",\n\t\"image_text\": \"Asset Management handler om værdiskabelse...\"\n}\n",
        "autoFix": true
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        2800,
        2480
      ],
      "id": "b923b2e1-eb5f-4864-a069-98461beaf1d9",
      "name": "Structured Output Parser3"
    },
    {
      "parameters": {
        "operation": "update",
        "schema": "public",
        "table": {
          "__rl": true,
          "value": "lesson_translations",
          "mode": "list",
          "cachedResultName": "lesson_translations"
        },
        "columns": {
          "0": "c",
          "1": "o",
          "2": "u",
          "3": "r",
          "4": "s",
          "5": "e",
          "6": "_",
          "7": "i",
          "8": "d",
          "9": ",",
          "10": "l",
          "11": "a",
          "12": "n",
          "13": "g",
          "14": "u",
          "15": "a",
          "16": "g",
          "17": "e",
          "18": "_",
          "19": "c",
          "20": "o",
          "21": "d",
          "22": "e",
          "23": ",",
          "24": "t",
          "25": "i",
          "26": "t",
          "27": "l",
          "28": "e",
          "29": ",",
          "30": "d",
          "31": "e",
          "32": "s",
          "33": "c",
          "34": "r",
          "35": "i",
          "36": "p",
          "37": "t",
          "38": "i",
          "39": "o",
          "40": "n",
          "41": ",",
          "42": "c",
          "43": "o",
          "44": "n",
          "45": "t",
          "46": "e",
          "47": "n",
          "48": "t",
          "49": ",",
          "50": "v",
          "51": "i",
          "52": "d",
          "53": "e",
          "54": "o",
          "55": "s",
          "56": "c",
          "57": "r",
          "58": "i",
          "59": "p",
          "60": "t",
          "61": ",",
          "62": "l",
          "63": "e",
          "64": "a",
          "65": "r",
          "66": "n",
          "67": "i",
          "68": "n",
          "69": "g",
          "70": "_",
          "71": "o",
          "72": "b",
          "73": "j",
          "74": "e",
          "75": "c",
          "76": "t",
          "77": "i",
          "78": "v",
          "79": "e",
          "80": "s",
          "81": ",",
          "82": "i",
          "83": "m",
          "84": "a",
          "85": "g",
          "86": "e",
          "87": "_",
          "88": "t",
          "89": "e",
          "90": "x",
          "91": "t",
          "92": ",",
          "93": "v",
          "94": "i",
          "95": "d",
          "96": "e",
          "97": "o",
          "98": "_",
          "99": "u",
          "100": "r",
          "101": "l",
          "102": ",",
          "103": "i",
          "104": "m",
          "105": "a",
          "106": "g",
          "107": "e",
          "108": "_",
          "109": "u",
          "110": "r",
          "111": "l",
          "112": ",",
          "113": "t",
          "114": "h",
          "115": "u",
          "116": "m",
          "117": "b",
          "118": "n",
          "119": "a",
          "120": "i",
          "121": "l",
          "122": "_",
          "123": "u",
          "124": "r",
          "125": "l",
          "126": ",",
          "127": "i",
          "128": "m",
          "129": "a",
          "130": "g",
          "131": "e",
          "132": "_",
          "133": "p",
          "134": "r",
          "135": "o",
          "136": "m",
          "137": "p",
          "138": "t",
          "139": ",",
          "140": "s",
          "141": "t",
          "142": "a",
          "143": "t",
          "144": "u",
          "145": "s",
          "mappingMode": "defineBelow",
          "value": {
            "language_code": "={{ $('Webhook Trigger').first().json.body.target_language }}",
            "content": "={{ $json.output.content }}",
            "image_url": "={{ $('Loop').item.json.image_url }}",
            "status": "draft",
            "image_text": "={{ $json.output.image_text }}",
            "image_prompt": "={{ $('Loop').item.json.image_prompt }}",
            "lesson_id": "={{ $('Loop').item.json.lesson_id }}",
            "exercises": "={{ $json.output.exercises }}",
            "reflection_questions": "={{ $json.output.reflection_questions }}",
            "resources": "={{ $json.output.resources }}"
          },
          "matchingColumns": [
            "lesson_id",
            "language_code"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "lesson_id",
              "displayName": "lesson_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "language_code",
              "displayName": "language_code",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "title",
              "displayName": "title",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "content",
              "displayName": "content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "video_url",
              "displayName": "video_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image_url",
              "displayName": "image_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "videoscript",
              "displayName": "videoscript",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "gamma_url",
              "displayName": "gamma_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "exercises",
              "displayName": "exercises",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "reflection_questions",
              "displayName": "reflection_questions",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "resources",
              "displayName": "resources",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "image_text",
              "displayName": "image_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "image_prompt",
              "displayName": "image_prompt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "c791ea1e-b299-444e-b551-c00807839f4a",
      "name": "Update Lesson Translation",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        3488,
        2176
      ],
      "credentials": {
        "postgres": {
          "id": "RUVxlMmZvsZC2IGe",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Hent alle items fra QuizTranslationMapper node\nconst sourceItems = $(\"QuizTranslationMapper\").all();\n\n// Brug en Map til at sikre unikke options baseret på module_question_option_id\nconst uniqueOptions = new Map();\n\nfor (const item of sourceItems) {\n  // QuizTranslationMapper returnerer hver question direkte i item.json\n  const question = item.json;\n  const options = question.options ?? [];\n  \n  for (const option of options) {\n    // Brug module_question_option_id som unik nøgle\n    if (!uniqueOptions.has(option.module_question_option_id)) {\n      uniqueOptions.set(option.module_question_option_id, {\n        module_question_option_id: option.module_question_option_id,\n        option_text: option.option_text,\n        module_question_id: question.module_question_id,\n      });\n    }\n  }\n}\n\n// Konverter Map til array format som n8n forventer\nconst allOptions = Array.from(uniqueOptions.values()).map(opt => ({ json: opt }));\n\nreturn allOptions;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3312,
        1632
      ],
      "id": "f47d86eb-26bf-4a23-8145-bf7fecab8675",
      "name": "Code Quiz options"
    },
    {
      "parameters": {
        "jsCode": "// Brug en Map til at sikre unikke questions baseret på module_question_id\nconst uniqueQuestions = new Map();\n\nfor (const item of $input.all()) {\n  // QuizTranslationMapper returnerer data direkte i item.json (ikke item.json.output.module_questions)\n  const question = item.json;\n  \n  // Brug module_question_id som unik nøgle\n  if (question.module_question_id && !uniqueQuestions.has(question.module_question_id)) {\n    uniqueQuestions.set(question.module_question_id, {\n      module_question_id: question.module_question_id,\n      module_id: question.module_id,\n      question_text: question.question_text,\n      language_code: question.language_code // Brug language_code fra QuizTranslationMapper\n    });\n  }\n}\n\n// Konverter Map til array format som n8n forventer\nconst allQuestions = Array.from(uniqueQuestions.values()).map(q => ({\n  json: q\n}));\n\nreturn allQuestions;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2816,
        1632
      ],
      "id": "17f153cc-397a-4657-a734-88e29f041c26",
      "name": "Code Quiz"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are a professional course translator. Translate the provided course module **quiz and quiz options content** from (ISO 639) language **{{ $('Webhook Trigger').first().json.body.source_language }}* to **{{ $('Webhook Trigger').first().json.body.target_language }}** following the guidelines below.\n\n# Course Context\n- **Course Structure:** Course -> **Modules** -> Lessons. We are now working in quiz and quiz options in one module.\n- **Course Title:** {{ $('Translate Course').first().json.output.title }}\n- **Source Language (ISO 639) code:** {{ $('Webhook Trigger').first().json.body.source_language }}\n- **Target Language (ISO 639) code:** {{ $('Webhook Trigger').first().json.body.target_language }}\n- **Course Description:**\n{{ $('Fetch Course Translation').first().json.description }}\n\n-- **Content of this module:**\n´´´\n{{ $('Update Module Translation').item.json.content }}\n´´´\n\n# Instructions\n1. Translate question_text and option_text in the Quiz-json\n2. Ensure a professional and educational tone throughout.\n3. Keep technical terms in English when appropriate.\n4. Keep all other fields unchanged.\n5. Pay especial attention to keep question_position and option_position unchanged because the workflow will fail if any of these keys are changed.\n\n",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "type": "HumanMessagePromptTemplate",
              "message": "=# Task: Translate question_text and option_text in the Quiz-json object and don't change question_position and option_position:\n{{ JSON.stringify($('StrippedQuizData').item.json.data, null, 2) }}\n\n"
            }
          ]
        },
        "batching": {}
      },
      "id": "3eee76ac-7a2d-4560-b374-1e4f8ba2759e",
      "name": "Translate Quiz",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        1776,
        1632
      ]
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        304,
        2128
      ],
      "id": "3d080f75-cc71-41c5-9659-9ccddc7aa3de",
      "name": "Limit1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1330d935-3910-4643-ab4c-9e482a32ddd6",
              "name": "content",
              "value": "={{ $json.content }}",
              "type": "string"
            },
            {
              "id": "a93b4cf2-3621-4312-bd20-b09a182c0554",
              "name": "exercises",
              "value": "={{ $json.exercises }}",
              "type": "string"
            },
            {
              "id": "ee547090-a4a8-4af3-808c-95e3952157a7",
              "name": "reflection_questions",
              "value": "={{ $json.reflection_questions }}",
              "type": "string"
            },
            {
              "id": "12fc5d63-7e53-4a2f-93f8-de934c09e1a8",
              "name": "resources",
              "value": "={{ $json.resources }}",
              "type": "string"
            },
            {
              "id": "784232d2-8d95-464c-94eb-b26b0ce5561f",
              "name": "image_text",
              "value": "={{ $json.image_text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1600,
        2192
      ],
      "id": "067662f0-9048-4a97-984e-1ee38920a2ff",
      "name": "To be translated"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1088,
        2112
      ],
      "id": "37c61505-c438-48a7-be24-1b41e6b4e73e",
      "name": "Loop"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "DELETE FROM course_translations WHERE language_code = $1 AND course_id = $2::uuid;\n\nDELETE FROM module_translations mt USING modules m\n  WHERE mt.module_id = m.id AND m.course_id = $2::uuid AND mt.language_code = $1;\n\nDELETE FROM lesson_translations lt USING lessons l, modules m\n  WHERE lt.lesson_id = l.id AND l.module_id = m.id AND m.course_id = $2::uuid AND lt.language_code = $1;\n\nDELETE FROM module_question_translations mqt USING module_questions mq, modules m\n  WHERE mqt.module_question_id = mq.id AND mq.module_id = m.id AND m.course_id = $2::uuid AND mqt.language_code = $1;\n\nDELETE FROM module_question_option_translations mqoot USING module_question_options mqo, module_questions mq, modules m\n  WHERE mqoot.module_question_option_id = mqo.id AND mqo.module_question_id = mq.id AND mq.module_id = m.id\n    AND m.course_id = $2::uuid AND mqoot.language_code = $1;",
        "options": {
          "queryReplacement": "$1 = {{ $json.body.target_language }}, $2 = {{ $json.body.course_id }}"
        }
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        368,
        112
      ],
      "id": "b6e96f05-2679-4d3c-86ba-4719db86d17b",
      "name": "Slet tidligere oversættelse",
      "credentials": {
        "postgres": {
          "id": "RUVxlMmZvsZC2IGe",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        1296,
        2016
      ],
      "id": "648109aa-8326-437a-84fe-047b5921bd58",
      "name": "Limit2"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "08ba3fd5-81f9-44f0-b258-71fb42aca0ce",
              "leftValue": "={{($json.body.source_language || \"\").toLowerCase()}}",
              "rightValue": "da",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "ffa6a7b8-8a21-451c-9ed7-1623c8549518",
              "leftValue": "={{($json.body.target_language || \"\").toLowerCase()}}",
              "rightValue": "da",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        32,
        112
      ],
      "id": "e724c901-6735-4fc6-aa10-7a01ca4647cf",
      "name": "If"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={   \"success\": false,   \"message\": \"Kildesproget skal altid være dansk og målsproget må aldrig være dansk. Ret sprogparametrene og prøv igen\" }",
        "options": {}
      },
      "id": "622fbe12-a463-4a6e-97b4-8889b5e7ce37",
      "name": "Respond to Webhook1",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.5,
      "position": [
        -176,
        544
      ]
    },
    {
      "parameters": {
        "jsCode": "// n8n Code Node: Map original UUIDs back to translated content\n// This node takes the original Danish input and translated output\n// and creates a complete translated structure with original IDs\n\n// Get original Danish data from the AggQuizOrg node\nconst originalData = $(\"AggQuizOrg\").first().json;\n\n// Get all translated outputs from current input\nconst translatedOutputs = $input.all();\n\n// Create a lookup map from the original data for quick access\nconst originalQuestionsMap = new Map();\nif (originalData && originalData.data) {\n  originalData.data.forEach(question => {\n    originalQuestionsMap.set(question.question_position, question);\n  });\n}\n\nconst mappedResults = [];\n\n// Process each translated output batch\nfor (const translatedBatch of translatedOutputs) {\n  if (!translatedBatch.json.output || !translatedBatch.json.output.module_questions) {\n    continue;\n  }\n  \n  const translatedQuestions = translatedBatch.json.output.module_questions;\n  \n  // Process each translated question\n  for (const translatedQuestion of translatedQuestions) {\n    const questionPosition = parseInt(translatedQuestion.question_position);\n    const originalQuestion = originalQuestionsMap.get(questionPosition);\n    \n    if (!originalQuestion) {\n      console.warn(`No original question found for position ${questionPosition}`);\n      continue;\n    }\n    \n    // Create the mapped question preserving original structure\n    const mappedQuestion = {\n      module_id: originalQuestion.module_id,\n      module_question_id: originalQuestion.module_question_id,\n      language_code: 'no', // Change this to your target language code\n      question_position: originalQuestion.question_position,\n      question_text: translatedQuestion.question_text, // Use translated text\n      options: []\n    };\n    \n    // Create option lookup map for this question\n    const originalOptionsMap = new Map();\n    originalQuestion.options.forEach(option => {\n      originalOptionsMap.set(option.option_position, option);\n    });\n    \n    // Map the options\n    if (translatedQuestion.options) {\n      for (const translatedOption of translatedQuestion.options) {\n        const optionPosition = parseInt(translatedOption.option_position);\n        const originalOption = originalOptionsMap.get(optionPosition);\n        \n        if (!originalOption) {\n          console.warn(`No original option found for question ${questionPosition}, option ${optionPosition}`);\n          continue;\n        }\n        \n        // Create mapped option preserving original structure\n        const mappedOption = {\n          module_question_option_id: originalOption.module_question_option_id,\n          option_position: originalOption.option_position,\n          is_correct: originalOption.is_correct,\n          option_text: translatedOption.option_text, // Use translated text\n          option_language_code: 'no' // Change this to your target language code\n        };\n        \n        mappedQuestion.options.push(mappedOption);\n      }\n      \n      // Sort options by position to maintain order\n      mappedQuestion.options.sort((a, b) => a.option_position - b.option_position);\n    }\n    \n    mappedResults.push({\n      json: mappedQuestion\n    });\n  }\n}\n\n// If no results were mapped, log for debugging\nif (mappedResults.length === 0) {\n  console.log('No questions were successfully mapped. Check input structure.');\n  console.log('Available inputs:', allInputs.length);\n  console.log('Original data structure:', originalData ? Object.keys(originalData) : 'undefined');\n}\n\nreturn mappedResults;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2400,
        1632
      ],
      "id": "13729e8b-1f88-4bd2-bc87-f1afe4a95b60",
      "name": "QuizTranslationMapper"
    },
    {
      "parameters": {
        "jsCode": "// Hent data fra LLM noden (direkte input)\nconst llmData = $input.all();\nconst translatedLessons = llmData[0].json.output.lessons;\n\n// Hent data fra AggLessonMapping noden (navngivet input)\nconst aggData = $('AggLessonMapping').all();\nconst lessonMapping = aggData[0].json.data;\n\n// Opret et map fra position til lesson_id for hurtig opslag\nconst positionToLessonId = {};\nlessonMapping.forEach(item => {\n  // Konverter position til string for konsistent sammenligning\n  positionToLessonId[String(item.position)] = item.lesson_id;\n});\n\n// Kombiner data: match oversatte titler med lesson_id baseret på position\nconst result = translatedLessons.map(translatedLesson => {\n  // Konverter position til string for at matche\n  const position = String(translatedLesson.position);\n  const lessonId = positionToLessonId[position];\n  \n  if (!lessonId) {\n    throw new Error(`Ingen lesson_id fundet for position ${position}`);\n  }\n  \n  return {\n    lesson_id: lessonId,\n    title: translatedLesson.title\n  };\n});\n\n// Returner resultatet\nreturn result;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3680,
        1136
      ],
      "id": "c214115f-3ad5-45e4-add2-e30eeb890a6b",
      "name": "LessonTranslationMapper"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e994d815-48d0-4b20-8f1a-6737ce7eda31",
              "name": "position",
              "value": "={{ $json.position }}",
              "type": "number"
            },
            {
              "id": "d55ebb08-373b-43cd-b382-7c8973282378",
              "name": "title",
              "value": "={{ $json.title }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1056,
        -112
      ],
      "id": "4cd7c577-d3a5-4b5f-81db-82e98d30c564",
      "name": "Module Positions"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1344,
        -112
      ],
      "id": "4f181b00-e8c4-4342-9fea-0d977c27b6fe",
      "name": "AggModulePositions"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "018ab2d9-7082-4128-bdf2-3b6cfff15679",
              "name": "position",
              "value": "={{ $json.position }}",
              "type": "number"
            },
            {
              "id": "8a90caf7-eeee-4579-99cb-3ea496767f2b",
              "name": "module_id",
              "value": "={{ $json.module_id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1056,
        80
      ],
      "id": "fa2ac846-e706-49a5-9481-d05154fcfe7e",
      "name": "Module Mapping"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1328,
        80
      ],
      "id": "77347849-8128-4fef-90c2-1ee74cf2c04e",
      "name": "AggModuleMapping"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        1808,
        80
      ],
      "id": "6c1d899c-9605-4f4e-b90f-581eb0097129",
      "name": "Merge"
    },
    {
      "parameters": {
        "jsCode": "// Hent data fra LLM noden (direkte input)\nconst llmData = $input.all();\nconst translatedModules = llmData[0].json.output.translated_module_titles;\n\n// Hent data fra AggModuleMapping noden (navngivet input)\nconst aggData = $('AggModuleMapping').all();\nconst moduleMapping = aggData[0].json.data;\n\n// Opret et map fra position til module_id for hurtig opslag\nconst positionToModuleId = {};\nmoduleMapping.forEach(item => {\n  // Konverter position til string for konsistent sammenligning\n  positionToModuleId[String(item.position)] = item.module_id;\n});\n\n// Kombiner data: match oversatte titler med module_id baseret på position\nconst result = translatedModules.map(translatedModule => {\n  // Konverter position til string for at matche\n  const position = String(translatedModule.position);\n  const moduleId = positionToModuleId[position];\n  \n  if (!moduleId) {\n    throw new Error(`Ingen module_id fundet for position ${position}`);\n  }\n  \n  return {\n    module_id: moduleId,\n    title: translatedModule.title\n  };\n});\n\n// Returner resultatet\nreturn result;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4112,
        80
      ],
      "id": "55117ab7-9f60-4993-99c3-ad4cf2a9c4d7",
      "name": "Code"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "41f5e15f-a371-40ea-a599-1e5a620e6023",
              "name": "position",
              "value": "={{ $json.position }}",
              "type": "number"
            },
            {
              "id": "b1911906-87e4-4013-a1a5-4eaf9fe06863",
              "name": "title",
              "value": "={{ $json.title }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1168,
        640
      ],
      "id": "fdc5d7e2-282f-40e3-9bc8-2722dd3da491",
      "name": "Lesson Positions"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1424,
        640
      ],
      "id": "78981ce6-648f-4221-9833-e25d37c3b1c7",
      "name": "AggLessonPositions"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "41f5e15f-a371-40ea-a599-1e5a620e6023",
              "name": "position",
              "value": "={{ $json.position }}",
              "type": "number"
            },
            {
              "id": "e5868d91-311b-4dc5-a916-a0d83f38dfaf",
              "name": "lesson_id",
              "value": "={{ $json.lesson_id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1168,
        832
      ],
      "id": "eb4e534d-0ffc-4996-b497-300d8981565c",
      "name": "Lesson Mapping"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1424,
        848
      ],
      "id": "7082cfe0-b435-4ff9-aded-4ac2da9cb3a4",
      "name": "AggLessonMapping"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        1584,
        448
      ],
      "id": "2549a8d1-22d8-46bf-8a0d-b58c11cc36b7",
      "name": "Merge1"
    },
    {
      "parameters": {
        "jsCode": "// N8N Code node til at fjerne uønskede felter fra JSON output\n\n// Hent input data fra forrige node\nconst items = $input.all();\n\n// Definer felter der skal fjernes\nconst fieldsToRemoveFromQuestion = ['module_id', 'module_question_id', 'language_code'];\nconst fieldsToRemoveFromOption = ['module_question_option_id', 'option_language_code'];\n\n// Funktion til at fjerne felter fra et objekt\nfunction removeFields(obj, fieldsToRemove) {\n  const newObj = { ...obj };\n  fieldsToRemove.forEach(field => {\n    delete newObj[field];\n  });\n  return newObj;\n}\n\n// Process hver item\nconst processedItems = items.map(item => {\n  // Tjek om item har json.data struktur (standard N8N format)\n  const data = item.json.data || item.json;\n  \n  // Process data arrayet\n  const processedData = data.map(questionObj => {\n    // Fjern felter fra spørgsmål objektet\n    const cleanedQuestion = removeFields(questionObj, fieldsToRemoveFromQuestion);\n    \n    // Process options arrayet hvis det eksisterer\n    if (cleanedQuestion.options && Array.isArray(cleanedQuestion.options)) {\n      cleanedQuestion.options = cleanedQuestion.options.map(option => {\n        return removeFields(option, fieldsToRemoveFromOption);\n      });\n    }\n    \n    return cleanedQuestion;\n  });\n  \n  // Returner i N8N format\n  return {\n    json: {\n      data: processedData\n    }\n  };\n});\n\n// Returner de processerede items\nreturn processedItems;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2400,
        752
      ],
      "id": "f216fe48-e2eb-4a49-af10-d648fd9b57c9",
      "name": "StrippedQuizData"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "google/gemini-2.5-pro",
          "mode": "list",
          "cachedResultName": "google/gemini-2.5-pro"
        },
        "options": {}
      },
      "id": "37a024d1-463b-4a80-895e-a51e8fff9489",
      "name": "parser",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        4400,
        528
      ],
      "credentials": {
        "openAiApi": {
          "id": "wLbV0srlBMaP36mY",
          "name": "Open Router"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "google/gemini-2.5-pro",
          "mode": "list",
          "cachedResultName": "google/gemini-2.5-pro"
        },
        "options": {}
      },
      "id": "7bf5a219-cad2-4171-9824-ba5a61b07e03",
      "name": "translater",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        3920,
        544
      ],
      "credentials": {
        "openAiApi": {
          "id": "wLbV0srlBMaP36mY",
          "name": "Open Router"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "32e9c747-4577-4201-84ee-420abaf52640",
              "name": "=executionID",
              "value": "={{$execution.id}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -48,
        -112
      ],
      "id": "4ed94a08-6023-490a-b448-9164ebbf83d1",
      "name": "ExecutionID"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={ \"executionId\": \"{{ $json.executionID }}\" }",
        "options": {}
      },
      "id": "502e4a2c-abdb-4c63-a18e-f4db46f43c10",
      "name": "Return Execution ID",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.5,
      "position": [
        240,
        -144
      ],
      "notesInFlow": false
    }
  ],
  "connections": {
    "Webhook Trigger": {
      "main": [
        [
          {
            "node": "ExecutionID",
            "type": "main",
            "index": 0
          },
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Course Info": {
      "main": [
        [
          {
            "node": "Fetch Module Names",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser1": {
      "ai_outputParser": [
        [
          {
            "node": "Translate Course",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Translate Course",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Course Translation": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upsert Course Translation": {
      "main": [
        [
          {
            "node": "Module Titles",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Module Names": {
      "main": [
        [
          {
            "node": "Module Positions",
            "type": "main",
            "index": 0
          },
          {
            "node": "Module Mapping",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Upsert Module Titles",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Lesson Names": {
      "main": [
        [
          {
            "node": "Lesson Positions",
            "type": "main",
            "index": 0
          },
          {
            "node": "Lesson Mapping",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Limit1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "Fetch Lesson Names",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Module Translation": {
      "main": [
        [
          {
            "node": "Aggregate1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate1": {
      "main": [
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Translate Course": {
      "main": [
        [
          {
            "node": "Upsert Course Translation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "Translate Module",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Translate Module",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Translate Module": {
      "main": [
        [
          {
            "node": "Update Module Translation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Module Titles": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Lesson Titles": {
      "main": [
        [
          {
            "node": "LessonTranslationMapper",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upsert Module Titles": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Module Translation": {
      "main": [
        [
          {
            "node": "Lesson Titles",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Lesson Titles": {
      "main": [
        [
          {
            "node": "Upsert Lesson Titles",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Module Questions1": {
      "main": [
        [
          {
            "node": "QuizOrg",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "QuizOrg": {
      "main": [
        [
          {
            "node": "AggQuizOrg",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AggQuizOrg": {
      "main": [
        [
          {
            "node": "StrippedQuizData",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upsert Lesson Titles": {
      "main": [
        [
          {
            "node": "Translate Quiz",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser2": {
      "ai_outputParser": [
        [
          {
            "node": "Translate Quiz",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Upsert quiz": {
      "main": [
        [
          {
            "node": "Code Quiz options",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upsert quiz options": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Lesson Org Content": {
      "main": [
        [
          {
            "node": "Loop",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser3": {
      "ai_outputParser": [
        [
          {
            "node": "Translate Lesson",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Translate Lesson": {
      "main": [
        [
          {
            "node": "Update Lesson Translation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Lesson Translation": {
      "main": [
        [
          {
            "node": "Loop",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code Quiz options": {
      "main": [
        [
          {
            "node": "Upsert quiz options",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code Quiz": {
      "main": [
        [
          {
            "node": "Upsert quiz",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Translate Quiz": {
      "main": [
        [
          {
            "node": "QuizTranslationMapper",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit1": {
      "main": [
        [
          {
            "node": "Fetch Lesson Org Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "To be translated": {
      "main": [
        [
          {
            "node": "Translate Lesson",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop": {
      "main": [
        [
          {
            "node": "Limit2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "To be translated",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Slet tidligere oversættelse": {
      "main": [
        [
          {
            "node": "Fetch Course Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit2": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Slet tidligere oversættelse",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "QuizTranslationMapper": {
      "main": [
        [
          {
            "node": "Code Quiz",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "LessonTranslationMapper": {
      "main": [
        [
          {
            "node": "Split Lesson Titles",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Module Positions": {
      "main": [
        [
          {
            "node": "AggModulePositions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Module Mapping": {
      "main": [
        [
          {
            "node": "AggModuleMapping",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AggModuleMapping": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "AggModulePositions": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Fetch Course Translation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Lesson Positions": {
      "main": [
        [
          {
            "node": "AggLessonPositions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AggLessonPositions": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Lesson Mapping": {
      "main": [
        [
          {
            "node": "AggLessonMapping",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AggLessonMapping": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Fetch Module Questions1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "StrippedQuizData": {
      "main": [
        [
          {
            "node": "Fetch Module Translation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "parser": {
      "ai_languageModel": [
        [
          {
            "node": "Structured Output Parser1",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Structured Output Parser3",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Structured Output Parser2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "translater": {
      "ai_languageModel": [
        [
          {
            "node": "Translate Module",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Translate Quiz",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Translate Lesson",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Translate Course",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Structured Output Parser",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "ExecutionID": {
      "main": [
        [
          {
            "node": "Return Execution ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "nQOHb0yI76JVQluc"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {
    "Webhook Trigger": [
      {
        "json": {
          "headers": {
            "host": "utilco.app.n8n.cloud",
            "user-agent": "node",
            "content-length": "98",
            "accept": "*/*",
            "accept-encoding": "gzip, br",
            "accept-language": "*",
            "cdn-loop": "netlify, deno; s=netlify; d=snEDmSdRYg5ZlTKvD4GT6QUGNfk1xTs-tYznLPXJcbA%3D, cloudflare; loops=1; subreqs=1",
            "cf-connecting-ip": "35.159.67.149",
            "cf-ew-via": "15",
            "cf-ipcountry": "DE",
            "cf-ray": "978e285ee61a994b-FRA",
            "cf-visitor": "{\"scheme\":\"https\"}",
            "cf-worker": "n8n.cloud",
            "content-type": "application/json",
            "sec-fetch-mode": "cors",
            "x-forwarded-for": "35.159.67.149, 162.158.87.56",
            "x-forwarded-host": "utilco.app.n8n.cloud",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "traefik-prod-users-gwc-10-6888ffdd77-zl6sm",
            "x-is-trusted": "yes",
            "x-real-ip": "35.159.67.149",
            "x-webhook-secret": "vczUfUpZhtQkJXFoP6hN"
          },
          "params": {},
          "query": {},
          "body": {
            "course_id": "74f636ab-2998-46f3-aff9-3165f9d1de3b",
            "source_language": "da",
            "target_language": "sv"
          },
          "webhookUrl": "https://utilco.app.n8n.cloud/webhook/1e414dae-8b81-4e8a-ab30-2e4b95942127",
          "executionMode": "production"
        }
      }
    ]
  },
  "versionId": "aa926ea5-0529-4c48-bb16-a40ce71734ea",
  "triggerCount": 1,
  "shared": [
    {
      "createdAt": "2025-08-27T04:20:38.903Z",
      "updatedAt": "2025-08-27T04:20:38.903Z",
      "role": "workflow:owner",
      "workflowId": "mlXlnlrQ4Tvp42XA",
      "projectId": "SFLNAzqJIfhKMhJx"
    }
  ],
  "tags": []
}