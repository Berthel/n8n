{
  "createdAt": "2025-08-25T08:42:21.121Z",
  "updatedAt": "2025-08-25T08:42:21.121Z",
  "id": "43x8emYwfa7TEY43",
  "name": "Translate course dynamic (Fixed)",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "translate-course-fixed",
        "options": {}
      },
      "id": "2eb81b59-5523-4bb2-b54f-e3753b49f91c",
      "name": "Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        -752,
        448
      ],
      "webhookId": "translate-course-fixed"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT\n  m.id AS module_id,\n  mt_source.content AS module_content_source,\n  COALESCE(json_agg(\n    json_build_object(\n      'lesson_id', l.id,\n      'lesson_content_source', lt_source.content,\n      'position', l.position\n    )\n    ORDER BY l.position NULLS LAST, l.id\n  ) FILTER (WHERE lt_source.content IS NOT NULL), '[]'::json) AS lessons\nFROM modules m\nJOIN courses c ON c.id = m.course_id\nJOIN module_translations mt_source\n  ON mt_source.module_id = m.id AND mt_source.language_code = '{{ $json.body.source_language }}'\nJOIN lessons l\n  ON l.module_id = m.id\nJOIN lesson_translations lt_source\n  ON lt_source.lesson_id = l.id AND lt_source.language_code = '{{ $json.body.source_language }}'\nLEFT JOIN lesson_translations lt_target\n  ON lt_target.lesson_id = l.id AND lt_target.language_code = '{{ $json.body.target_language }}'\nWHERE c.id = '{{ $json.body.course_id }}'\n  AND lt_target.lesson_id IS NULL\nGROUP BY m.id, mt_source.content;",
        "options": {}
      },
      "id": "71ada87d-b30b-4704-9db4-349327af2042",
      "name": "Fetch Modules+Lessons (grouped)",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -528,
        572
      ],
      "credentials": {
        "postgres": {
          "id": "Vw56OL1mZd8nlif7",
          "name": "Postgres staging account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT\n  mt_source.module_id,\n  mt_source.content AS module_content_source\nFROM module_translations mt_source\nJOIN modules m ON m.id = mt_source.module_id\nJOIN courses c ON c.id = m.course_id\nLEFT JOIN module_translations mt_target\n  ON mt_target.module_id = mt_source.module_id AND mt_target.language_code = '{{ $json.body.target_language }}'\nWHERE mt_source.language_code = '{{ $json.body.source_language }}'\n  AND c.id = '{{ $json.body.course_id }}'\n  AND mt_target.module_id IS NULL;",
        "options": {}
      },
      "id": "2f2ad1e0-f08a-4c25-8ee8-d53c624aa216",
      "name": "Fetch Modules (missing translations)",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -80,
        200
      ],
      "credentials": {
        "postgres": {
          "id": "Vw56OL1mZd8nlif7",
          "name": "Postgres staging account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "Modultekst ({{ $node[\"Webhook Trigger\"].json.body.source_language }}):\n{{ $json.module_content_source }}\n\nOppgave: returnér KUN oversættelsen til {{ $node[\"Webhook Trigger\"].json.body.target_language }}.",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "Du oversætter fra {{ $node[\"Webhook Trigger\"].json.body.source_language }} til {{ $node[\"Webhook Trigger\"].json.body.target_language }}. Bevar struktur, overskrifter, markdown, kodeblokke og terminologi. Ingen forkortelser eller sammenfatninger; kun trofast oversættelse i naturligt sprog."
            }
          ]
        },
        "batching": {}
      },
      "id": "d92b2788-0f0d-40d4-a660-8d6d043995e2",
      "name": "Translate Module",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        176,
        96
      ]
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"module_content_translated\": \"This is the translated module content\"\n}",
        "autoFix": true
      },
      "id": "6e65b2c8-fcdb-4cbc-9720-cbf527c3732d",
      "name": "Module Output Parser",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        272,
        320
      ]
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "google/gemini-2.0-flash-exp:free",
          "mode": "list",
          "cachedResultName": "google/gemini-2.0-flash-exp:free"
        },
        "options": {
          "temperature": 0.2
        }
      },
      "id": "937728af-3cca-4489-a73e-19d35a402c14",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        144,
        320
      ],
      "credentials": {
        "openAiApi": {
          "id": "wLbV0srlBMaP36mY",
          "name": "Open Router"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO module_translations (module_id, language_code, content)\nVALUES ('{{ $json.module_id }}', '{{ $node[\"Webhook Trigger\"].json.body.target_language }}', '{{ $json.module_content_translated }}')\nON CONFLICT (module_id, language_code)\nDO UPDATE SET content = EXCLUDED.content\nRETURNING module_id, language_code;",
        "options": {}
      },
      "id": "4e909dbc-d574-47a8-82d0-636bcbd71945",
      "name": "Upsert Module Translation",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        640,
        200
      ],
      "credentials": {
        "postgres": {
          "id": "Vw56OL1mZd8nlif7",
          "name": "Postgres staging account"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "lessons",
        "include": "allOtherFields",
        "options": {}
      },
      "id": "bd6130fe-639d-4a7f-bf9e-f73193d6eaea",
      "name": "Split Out Lessons",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -304,
        572
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "condition-check",
              "leftValue": "{{ $json.lesson.lesson_content_source }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "eb5e4ca2-054f-4bd3-b7bc-70692f455c0a",
      "name": "IF Lesson Content Not Empty",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.1,
      "position": [
        -80,
        572
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "Modul (kontekst, {{ $node[\"Webhook Trigger\"].json.body.source_language }}):\n{{ $json.module_content_source }}\n\nLesson (input, {{ $node[\"Webhook Trigger\"].json.body.source_language }}):\n{{ $json.lesson.lesson_content_source }}\n\nOppgave: Returnér KUN lesson-teksten oversat til idiomatisk {{ $node[\"Webhook Trigger\"].json.body.target_language }}, samme struktur/markdown.",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "Du oversætter fra {{ $node[\"Webhook Trigger\"].json.body.source_language }} til {{ $node[\"Webhook Trigger\"].json.body.target_language }}. Bevar struktur, markdown, kodeblokke. Tilpas terminologi konsekvent på tværs af modul og lesson. Oversæt kun lesson-teksten, men brug modulteksten som kontekst for terminologi."
            }
          ]
        },
        "batching": {}
      },
      "id": "9c03529b-0014-4649-8ca3-13ca0b238f21",
      "name": "Translate Lesson with Context",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        216,
        696
      ]
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"lesson_content_translated\": \"This is the translated lesson content\"\n}",
        "autoFix": true
      },
      "id": "30b6174a-6a05-49a8-8301-758d760bddcf",
      "name": "Lesson Output Parser",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        208,
        920
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO lesson_translations (lesson_id, language_code, content)\nVALUES ('{{ $json.lesson.lesson_id }}', '{{ $node[\"Webhook Trigger\"].json.body.target_language }}', '{{ $json.lesson_content_translated }}')\nON CONFLICT (lesson_id, language_code)\nDO UPDATE SET content = EXCLUDED.content\nRETURNING lesson_id, language_code;",
        "options": {}
      },
      "id": "8ed1c534-f70c-49fa-a682-aeeca0d142f6",
      "name": "Upsert Lesson Translation",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        640,
        696
      ],
      "credentials": {
        "postgres": {
          "id": "Vw56OL1mZd8nlif7",
          "name": "Postgres staging account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "status-field",
              "name": "status",
              "value": "success",
              "type": "string"
            },
            {
              "id": "message-field",
              "name": "message",
              "value": "Translation workflow completed for course {{ $node[\"Webhook Trigger\"].json.body.course_id }}",
              "type": "string"
            },
            {
              "id": "modules-field",
              "name": "modules_processed",
              "value": "{{ $items().length }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "id": "19668f8c-f8ad-43ab-b7aa-ddfc0e0d26a0",
      "name": "Merge Results",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        864,
        448
      ]
    }
  ],
  "connections": {
    "Webhook Trigger": {
      "main": [
        [
          {
            "node": "Fetch Modules (missing translations)",
            "type": "main",
            "index": 0
          },
          {
            "node": "Fetch Modules+Lessons (grouped)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Modules (missing translations)": {
      "main": [
        [
          {
            "node": "Translate Module",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "main": [],
      "ai_languageModel": [
        [
          {
            "node": "Translate Module",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Translate Lesson with Context",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Module Output Parser",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Lesson Output Parser",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Translate Module": {
      "main": [
        [
          {
            "node": "Upsert Module Translation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upsert Module Translation": {
      "main": [
        [
          {
            "node": "Merge Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Modules+Lessons (grouped)": {
      "main": [
        [
          {
            "node": "Split Out Lessons",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out Lessons": {
      "main": [
        [
          {
            "node": "IF Lesson Content Not Empty",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF Lesson Content Not Empty": {
      "main": [
        [
          {
            "node": "Translate Lesson with Context",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Translate Lesson with Context": {
      "main": [
        [
          {
            "node": "Upsert Lesson Translation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upsert Lesson Translation": {
      "main": [
        [
          {
            "node": "Merge Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Lesson Output Parser": {
      "main": [],
      "ai_outputParser": [
        [
          {
            "node": "Translate Lesson with Context",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Module Output Parser": {
      "main": [],
      "ai_outputParser": [
        [
          {
            "node": "Translate Module",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveManualExecutions": true,
    "saveExecutionProgress": true
  },
  "staticData": null,
  "meta": null,
  "pinData": null,
  "versionId": "12d9b290-f301-4ccb-8da8-0f30f9c81df1",
  "triggerCount": 0,
  "shared": [
    {
      "createdAt": "2025-08-25T08:42:21.122Z",
      "updatedAt": "2025-08-25T08:42:21.122Z",
      "role": "workflow:owner",
      "workflowId": "43x8emYwfa7TEY43",
      "projectId": "amlePLldrdBTzDyr"
    }
  ],
  "tags": []
}